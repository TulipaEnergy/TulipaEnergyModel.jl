{
  "var_assets_decommission_energy": {
    "index columns": "asset, milestone_year, commission_year",
    "model parameters": "investment_integer_storage_energy",
    "solution": ""
    },
  "var_assets_decommission": {
    "index columns": "asset, milestone_year, commission_year",
    "model parameters": "decommissionable, initial_units, investment_integer",
    "solution": ""
    },
  "var_assets_investment_energy": {
    "index columns": "asset,milestone_year" ,
    "model parameters": "investment_integer_storage_energy, capacity_storage_energy, investment_limit_storage_energy",
    "solution": ""
    },
  "var_assets_investment": {
    "index columns": "asset, milestone_year",
    "model parameters": "investment_integer, capacity, investment_limit",
    "solution": ""
    },
  "var_flow": {
    "index columns": "from_asset, to_asset, year, rep_period, time_block_start, time_block_end",
    "model parameters": "efficiency",
    "solution": ""
    },
  "var_flows_decommission": {
    "index columns": "from_asset, to_asset, milestone_year, commission_year",
    "model parameters": "investment_integer",
    "solution": ""
    },
  "var_flows_investment": {
    "index columns": "from_asset, to_asset, milestone_year",
    "model parameters": "investment_integer, capacity, investment_limit",
    "solution": ""
    },
  "var_storage_level_over_clustered_year": {
    "index columns": "asset,year, period_block_start, period_block_end" ,
    "solution": ""
    },
  "var_storage_level_rep_period": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "solution": ""
    },
  "var_units_on": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "model parameters": "unit_commitment_integer",
    "solution": ""
    },
  "cons_balance_hub": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "dual_balance_hub": "The change in the objective function for a 1 unit increase in capacity of the hub."
  },
  "cons_balance_consumer": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "dual_balance_consumer": "The change in the objective function for a 1 unit increase in the consumer demand."
  },
  "cons_balance_conversion": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "dual_balance_conversion": ""
  },
  "cons_balance_storage_over_clustered_year": {
    "index columns": "asset, year, period_block_start, period_block_end",
    "dual_balance_storage_over_clustered_year": "",
    "dual_max_storage_level_over_clustered_year_limit": "",
    "dual_min_storage_level_over_clustered_year_limit": ""
  },
  "cons_balance_storage_rep_period": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "dual_balance_storage_rep_period": "",
    "dual_max_storage_level_rep_period_limit": "",
    "dual_min_storage_level_rep_period_limit": ""
  },
  "cons_capacity_incoming": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "dual_max_input_flows_limit": ""
  },
  "cons_capacity_outgoing": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "dual_max_output_flows_limit": ""
  },
  "cons_limit_units_on": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "model parameters": "unit_commitment_integer",
    "dual_limit_units_on": ""
  },
  "cons_max_output_flow_with_basic_unit_commitment": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "dual_max_output_flow_with_basic_unit_commitment": ""
  },
  "cons_max_ramp_with_unit_commitment": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "dual_max_ramp_up_with_unit_commitment": "",
    "dual_max_ramp_down_with_unit_commitment": ""
  },
  "cons_min_output_flow_with_unit_commitment": {
    "index columns": "asset, year, rep_period, time_block_start, time_block_end",
    "dual_min_output_flow_with_unit_commitment": ""
  },
  "cons_transport_flow_limit": {
    "index columns": "from_asset, to_asset, year, rep_period, time_block_start, time_block_end",
    "var_flow_id": "Unique ID used internally by TulipaEnergyModel",
    "dual_max_transport_flow_limit": "",
    "dual_min_transport_flow_limit": ""
  }
  }
