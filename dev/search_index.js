var documenterSearchIndex = {"docs":
[{"location":"10-how-to-use/#how-to-use","page":"How to Use","title":"How to Use","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Pages = [\"10-how-to-use.md\"]\nDepth = 3","category":"page"},{"location":"10-how-to-use/#Install","page":"How to Use","title":"Install","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"To use Tulipa, you first need to install the opensource Julia programming language.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Then consider installing a user-friendly code editor, such as VSCode. Otherwise you will be running from the terminal/command prompt.","category":"page"},{"location":"10-how-to-use/#Starting-Julia","page":"How to Use","title":"Starting Julia","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Choose one:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"In VSCode: Press CTRL+Shift+P and press Enter to start a Julia REPL.\nIn the terminal: Type julia and press Enter","category":"page"},{"location":"10-how-to-use/#Adding-TulipaEnergyModel","page":"How to Use","title":"Adding TulipaEnergyModel","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"In Julia:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Enter package mode (press \"]\")","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"pkg> add TulipaEnergyModel","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Return to Julia mode (backspace)","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"julia> using TulipaEnergyModel","category":"page"},{"location":"10-how-to-use/#(Optional)-Running-automatic-tests","page":"How to Use","title":"(Optional) Running automatic tests","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"It is nice to check that tests are passing to make sure your environment is working, this takes a minute or two.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Enter package mode (press \"]\")","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"pkg> test TulipaEnergyModel","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"All tests should pass.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"warning: Admin rights in your local machine\nEnsure you have admin rights on the folder where the package is installed; otherwise, an error will appear during the tests.","category":"page"},{"location":"10-how-to-use/#Running-a-Scenario","page":"How to Use","title":"Running a Scenario","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"To run a scenario, use the function:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"run_scenario(connection)\nrun_scenario(connection; output_folder)","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"The connection should have been created and the data loaded into it using TulipaIO. See the tutorials for a complete guide on how to achieve this. The output_folder is optional if the user wants to export the output.","category":"page"},{"location":"10-how-to-use/#input","page":"How to Use","title":"Input","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Currently, we only accept input from CSV files that follow the Schemas.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"You can also check the test/inputs folder for examples of different predefined energy systems and features. Moreover, Tulipa's Offshore Bidding Zone Case Study can be found in https://github.com/TulipaEnergy/Tulipa-OBZ-CaseStudy. It shows how to start from user-friendly files and transform the data into the input files in the Schemas through different functions.","category":"page"},{"location":"10-how-to-use/#Writing-the-output-to-CSV","page":"How to Use","title":"Writing the output to CSV","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"To save the solution to CSV files, you can use export_solution_to_csv_files. See the tutorials for an example showcasing this function.","category":"page"},{"location":"10-how-to-use/#infeasible","page":"How to Use","title":"Exploring infeasibility","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"If your model is infeasible, you can try exploring the infeasibility with JuMP.compute_conflict! and JuMP.copy_conflict.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"warning: Check your solver options!\nNot all solvers support this functionality; please check depending on each case.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Use energy_problem.model for the model argument. For instance:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"if energy_problem.termination_status == INFEASIBLE\n compute_conflict!(energy_problem.model)\n iis_model, reference_map = copy_conflict(energy_problem.model)\n print(iis_model)\nend","category":"page"},{"location":"10-how-to-use/#need-for-speed","page":"How to Use","title":"Speed improvements in the model creation","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"If you want to speed-up model creation, consider disabling the naming of variables and constraints. Of course, removing the names will make debugging difficult (or impossible) - so enable/disable naming as needed for your analysis.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"# Disable names while using run_scenario\nrun_scenario(connection; enable_names = false)\n\n# OR while using create_model!\ncreate_model!(energy_problem; enable_names = false)","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"For more information, see the JuMP documentation.","category":"page"},{"location":"10-how-to-use/#Finding-an-input-parameter","page":"How to Use","title":"Finding an input parameter","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"tip: Are you looking for a input parameter?\nPlease visit the Model Parameters section for a description and location of the input parameters mentioned in this section.","category":"page"},{"location":"10-how-to-use/#Storage-specific-setups","page":"How to Use","title":"Storage specific setups","text":"","category":"section"},{"location":"10-how-to-use/#seasonal-setup","page":"How to Use","title":"Seasonal and non-seasonal storage","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Section Storage Modeling explains the main concepts for modeling seasonal and non-seasonal storage in TulipaEnergyModel.jl. To define if an asset is one type or the other then consider the following:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Seasonal storage: When the storage capacity of an asset is greater than the total length of representative periods, we recommend using the inter-temporal constraints. To apply these constraints, you must set the input parameter is_seasonal to true.\nNon-seasonal storage: When the storage capacity of an asset is lower than the total length of representative periods, we recommend using the intra-temporal constraints. To apply these constraints, you must set the input parameter is_seasonal to false.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"info: Info\nIf the input data covers only one representative period for the entire year, for example, with 8760-hour timesteps, and you have a monthly hydropower plant, then you should set the is_seasonal parameter for that asset to false. This is because the length of the representative period is greater than the storage capacity of the storage asset.","category":"page"},{"location":"10-how-to-use/#storage-investment-setup","page":"How to Use","title":"The energy storage investment method","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Energy storage assets have a unique characteristic wherein the investment is based not solely on the capacity to charge and discharge, but also on the energy capacity. Some storage asset types have a fixed duration for a given capacity, which means that there is a predefined ratio between energy and power. For instance, a battery of 10MW/unit and 4h duration implies that the energy capacity is 40MWh. Conversely, other storage asset types don't have a fixed ratio between the investment of capacity and storage capacity. Therefore, the energy capacity can be optimized independently of the capacity investment, such as hydrogen storage in salt caverns. To define if an energy asset is one type or the other then consider the following parameters:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Investment energy method: To use this method, set the parameter storage_method_energy to true. In addition, it is necessary to define:\ninvestment_cost_storage_energy: To establish the cost of investing in the storage capacity (e.g., kEUR/MWh/unit).\nfixed_cost_storage_energy: To establish the fixed cost of energy storage capacity (e.g., kEUR/MWh/unit).\ninvestment_limit_storage_energy: To define the potential of the energy capacity investment (e.g., MWh). Missing values mean that there is no limit.\ninvestment_integer_storage_energy: To determine whether the investment variables of storage capacity are integers of continuous.\nFixed energy-to-power ratio method: To use this method, set the parameter storage_method_energy to false. In addition, it is necessary to define the parameter energy_to_power_ratio to establish the predefined duration of the storage asset or ratio between energy and power. Note that all the investment costs should be allocated in the parameter investment_cost.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"In addition, the parameter capacity_storage_energy defines the energy per unit of storage capacity invested in (e.g., MWh/unit).","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"For more details on the constraints that apply when selecting one method or the other, please visit the mathematical formulation section.","category":"page"},{"location":"10-how-to-use/#storage-binary-method-setup","page":"How to Use","title":"Control simultaneous charging and discharging","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Depending on the configuration of the energy storage assets, it may or may not be possible to charge and discharge them simultaneously. For instance, a single battery cannot charge and discharge at the same time, but some pumped hydro storage technologies have separate components for charging (pump) and discharging (turbine) that can function independently, allowing them to charge and discharge simultaneously. To account for these differences, the model provides users with three options for the use_binary_storage_method parameter:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"binary: the model adds a binary variable to prevent charging and discharging simultaneously.\nrelaxed_binary: the model adds a binary variable that allows values between 0 and 1, reducing the likelihood of charging and discharging simultaneously. This option uses a tighter set of constraints close to the convex hull of the full formulation, resulting in fewer instances of simultaneous charging and discharging in the results.\nIf no value is set, i.e., missing value, the storage asset can charge and discharge simultaneously.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"For more details on the constraints that apply when selecting this method, please visit the mathematical formulation section.","category":"page"},{"location":"10-how-to-use/#unit-commitment-setup","page":"How to Use","title":"Setting up unit commitment constraints","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"The unit commitment constraints are only applied to producer and conversion assets. The unit_commitment parameter must be set to true to include the constraints. Additionally, the following parameters should be set in that same file:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"unit_commitment_method: It determines which unit commitment method to use. The current version of the code only includes the basic version. Future versions will add more detailed constraints as additional options.\nunits_on_cost: Objective function coefficient on units_on variable. (e.g., no-load cost or idling cost in kEUR/h/unit)\nunit_commitment_integer: It determines whether the unit commitment variables are considered as integer or not (true or false)\nmin_operating_point: Minimum operating point or minimum stable generation level defined as a portion of the capacity of asset (p.u.)","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"For more details on the constraints that apply when selecting this method, please visit the mathematical formulation section.","category":"page"},{"location":"10-how-to-use/#ramping-setup","page":"How to Use","title":"Setting up ramping constraints","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"The ramping constraints are only applied to producer and conversion assets. The ramping parameter must be set to true to include the constraints. Additionally, the following parameters should be set in that same file:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"max_ramp_up: Maximum ramping up rate as a portion of the capacity of asset (p.u./h)\nmax_ramp_down:Maximum ramping down rate as a portion of the capacity of asset (p.u./h)","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"For more details on the constraints that apply when selecting this method, please visit the mathematical formulation section.","category":"page"},{"location":"10-how-to-use/#max-min-outgoing-energy-setup","page":"How to Use","title":"Setting up a maximum or minimum outgoing energy limit","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"For the model to add constraints for a maximum or minimum energy limit for an asset throughout the model's timeframe (e.g., a year), we need to establish a couple of parameters:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"is_seasonal = true. This parameter enables the model to use the inter-temporal constraints.\nmax_energy_timeframe_partition neq missing or min_energy_timeframe_partition neq missing. This value represents the peak energy that will be then multiplied by the profile for each period in the timeframe.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"info: Info\nThese parameters are defined per period, and the default values for profiles are 1.0 p.u. per period. If the periods are determined daily, the energy limit for the whole year will be 365 times maxor min_energy_timeframe_partition.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"(optional) profile_type and profile_name in the timeframe files. If there is no profile defined, then by default it is 1.0 p.u. for all periods in the timeframe.\n(optional) define a period partition in timeframe partition files. If there is no partition defined, then by default the constraint is created for each period in the timeframe, otherwise, it will consider the partition definition in the file.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"tip: Tip\nIf you want to set a limit on the maximum or minimum outgoing energy for a year with representative days, you can use the partition definition to create a single partition for the entire year to combine the profile.","category":"page"},{"location":"10-how-to-use/#Example:-Setting-Energy-Limits","page":"How to Use","title":"Example: Setting Energy Limits","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Let's assume we have a year divided into 365 days because we are using days as periods in the representatives from TulipaClustering.jl. Also, we define the max_energy_timeframe_partition = 10 MWh, meaning the peak energy we want to have is 10MWh for each period or period partition. So depending on the optional information, we can have:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Profile Period Partitions Example\nNone None The default profile is 1.p.u. for each period and since there are no period partitions, the constraints will be for each period (i.e., daily). So the outgoing energy of the asset for each day must be less than or equal to 10MWh.\nDefined None The profile definition and value will be in the  timeframe profiles files. For example, we define a profile that has the following first four values: 0.6 p.u., 1.0 p.u., 0.8 p.u., and 0.4 p.u. There are no period partitions, so constraints will be for each period (i.e., daily). Therefore the outgoing energy of the asset for the first four days must be less than or equal to 6MWh, 10MWh, 8MWh, and 4MWh.\nDefined Defined Using the same profile as above, we now define a period partition in the timeframe partitions file as uniform with a value of 2. This value means that we will aggregate every two periods (i.e., every two days). So, instead of having 365 constraints, we will have 183 constraints (182 every two days and one last constraint of 1 day). Then the profile is aggregated with the sum of the values inside the periods within the partition. Thus, the outgoing energy of the asset for the first two partitions (i.e., every two days) must be less than or equal to 16MWh and 12MWh, respectively.","category":"page"},{"location":"10-how-to-use/#group-setup","page":"How to Use","title":"Defining a group of assets","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"A group of assets refers to a set of assets that share certain constraints. For example, the investments of a group of assets may be capped at a maximum value, which represents the potential of a specific area that is restricted in terms of the maximum allowable MW due to limitations on building licenses.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"In order to define the groups in the model, the following steps are necessary:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Create a group file by defining the name property and its parameters in the group_asset table (or CSV file).\nAssign assets to the group by setting the name in the group parameter/column of the asset file.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"info: Info\nA missing value in the parameter group means that the asset does not belong to any group.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Groups are useful to represent several common constraints, the following group constraints are available.","category":"page"},{"location":"10-how-to-use/#investment-group-setup","page":"How to Use","title":"Setting up a maximum or minimum investment limit for a group","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"The mathematical formulation of the maximum and minimum investment limit for group constraints is available here.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"invest_method = true. This parameter enables the model to use the investment group constraints.\nmin_investment_limit neq missing or max_investment_limit neq missing. This value represents the limits that will be imposed on the investment that belongs to the group.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"info: Info\nA missing value in the parameters min_investment_limit and max_investment_limit means that there is no investment limit.\nThese constraints are applied to the investments each year. The model does not yet have investment limits to a group's available invested capacity.","category":"page"},{"location":"10-how-to-use/#Example:-Group-of-Assets","page":"How to Use","title":"Example: Group of Assets","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Let's explore how the groups are set up in the test case called Norse. First, let's take a look at the group-asset.csv file:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"using DataFrames # hide\nusing CSV # hide\ninput_asset_file = \"../../test/inputs/Norse/group-asset.csv\" # hide\nassets = CSV.read(input_asset_file, DataFrame, header = 1) # hide","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"In the given data, there are two groups: renewables and ccgt. Both groups have the invest_method parameter set to true, indicating that investment group constraints apply to both. For the renewables group, the min_investment_limit parameter is missing, signifying that there is no minimum limit imposed on the group. However, the max_investment_limit parameter is set to 40000 MW, indicating that the total investments of assets in the group must be less than or equal to this value. In contrast, the ccgt group has a missing value in the max_investment_limit parameter, indicating no maximum limit, while the min_investment_limit is set to 10000 MW for the total investments in that group.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Let's now explore which assets are in each group. To do so, we can take a look at the asset.csv file:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"input_asset_file = \"../../test/inputs/Norse/asset.csv\" # hide\nassets = CSV.read(input_asset_file, DataFrame) # hide\nassets = assets[.!ismissing.(assets.group), [:asset, :type, :group]] # hide","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Here we can see that the assets Asgard_Solar and Midgard_Wind belong to the renewables group, while the assets Asgard_CCGT and Midgard_CCGT belong to the ccgt group.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"info: Info\nIf the group has a min_investment_limit, then assets in the group have to allow investment (investable = true) for the model to be feasible. If the assets are not investable then they cannot satisfy the minimum constraint.","category":"page"},{"location":"10-how-to-use/#multi-year-setup","page":"How to Use","title":"Setting up multi-year investments","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"warning: This feature is under a major refactor\nThis section might have out-of-date information. The update of these docs is tracked in https://github.com/TulipaEnergy/TulipaEnergyModel.jl/issues/983","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"It is possible to simutaneously model different years, which is especially relevant for modeling multi-year investments. Multi-year investments refer to making investment decisions at different points in time, such that a pathway of investments can be modeled. This is particularly useful when long-term scenarios are modeled, but modeling each year is not practical. Or in a business case, investment decisions are supposed to be made in different years which has an impact on the cash flow.","category":"page"},{"location":"10-how-to-use/#Filling-the-input-data","page":"How to Use","title":"Filling the input data","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"In order to set up a model with year information, the following steps are necessary.","category":"page"},{"location":"10-how-to-use/#Year-data","page":"How to Use","title":"Year data","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Fill in all the years in year-data.csv file by defining the year property and its parameters. Differentiate milestone years and non-milestone years.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Milestone years are the years you would like to model, e.g., if you want to model operation and/or investments (it is possibile to not allow investments) in 2030, 2040, and 2050. These 3 years are then milestone years.\nNon-milestone years are the investment years of existing units. For example, you want to consider a existing wind unit that is invested in 2020, then 2020 is a non-milestone year.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"info: Info\nA year can both be a year that you want to model and that there are existing units invested, then this year is a milestone year.","category":"page"},{"location":"10-how-to-use/#Commission-year-data","page":"How to Use","title":"Commission year data","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Fill in the parameters related to the investment year (commission_year in the data) of the asset, i.e., investment costs and fixed costs.","category":"page"},{"location":"10-how-to-use/#Assets-investment-data","page":"How to Use","title":"Assets investment data","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Fill in the parameters in the asset file. These parameters are for the assets across all the years, i.e., not dependent on years. Examples are lifetime (both technical_lifetime and economic_lifetime) and capacity of a unit.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"You also have to choose a investment_method for the asset, between none, simple, and compact. The below tables shows what happens to the activation of the investment and decommission variable for certain investment methods and the investable parameter.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Consider you only want to model operation without investments, then you would need to set investable_method to none. Neither investment variables and decommission variables are activated. And here the investable_method overrules investable, because the latter does not matter.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"info: Info\nAlthough it is called investment_method, you can see from the table that, actually, it controls directly the activation of the decommission variable. The investment variable is controlled by investable, which is overruled by investable_method in case of a conflict (i.e., for the none method).","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"investment_method investable investment variable decommission variable\nnone true false false\nnone false false false\nsimple true true true\nsimple false false true\ncompact true true true\ncompact false false true","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"For more details on the constraints that apply when selecting these methods, please visit the mathematical formulation section.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"info: Info\nThe compact method can only be applied to producer assets and conversion assets. Transport assets and storage assets can only use simple method.","category":"page"},{"location":"10-how-to-use/#Assets-and-flows-information","page":"How to Use","title":"Assets and flows information","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Fill in the assets and flows information.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"In the year column, fill in all the milestone years. In the commission_year column, fill in the investment years of the existing assets that are still available in this year.\nIf the commission_year is a non-milestone year, then it means the row is for an existing unit. The investable has to be set to false, and you put the existing units in the column initial_units.\nIf the commission_year is a milestone year, then you put the existing units in the column initial_units. Depending on whether you want to model investments or not, you put the investable to either true or false.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Let's explain further using an example. To do so, we can take a look at the asset-both.csv file:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"using DataFrames # hide\nusing CSV # hide\ninput_asset_file = \"../../test/inputs/Multi-year Investments/asset-both.csv\" # hide\nassets_data = CSV.read(input_asset_file, DataFrame) # hide\nassets_data = assets_data[1:10, [:asset, :milestone_year, :commission_year, :initial_units]] # hide","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"We allow investments of ocgt, ccgt, battery, wind, and solar in 2030.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"ocgt has no existing units.\nccgt has 1 existing units, invested in 2028, and still available in 2030.\nccgt has 0.07 existing units, invested in 2020, and still available in 2030. Another 0.02 existing units, invested in 2030.\nwind has 0.07 existing units, invested in 2020, and still available in 2030. Another 0.02 existing units, invested in 2030.\nsolar has no existing units.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"info: Info\nWe only consider the existing units which are still available in the milestone years.","category":"page"},{"location":"10-how-to-use/#Profiles-information","page":"How to Use","title":"Profiles information","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Fill in relevant profiles in the files. Important to know that you can use different profiles for assets that are invested in different years. You fill in the profile names in assets-profiles.csv for relevant years. In profiles-rep-periods.csv, you relate the profile names with the modeled years.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"Let's explain further using an example. To do so, we can take a look at the assets-profiles.csv file:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"input_asset_file = \"../../test/inputs/Multi-year Investments/assets-profiles.csv\" # hide\nassets_profiles = CSV.read(input_asset_file, DataFrame, header = 1) # hide\nassets_profiles = assets_profiles[1:2, :] # hide","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"We have two profiles for wind invested in 2020 and 2030. Imagine these are two wind turbines with different efficiencies due to the year of manufacture. These are reflected in the profiles for the model year 2030, which are defined in the profiles-rep-periods.csv file.","category":"page"},{"location":"10-how-to-use/#Economic-representation","page":"How to Use","title":"Economic representation","text":"","category":"section"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"For economic representation, the following parameters need to be set up:","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"[optional] discount year and discount rate in the model-parameters-example.toml file: model-wide discount year and rate. By default, the model will use a discount rate of 0, and a discount year of the first milestone year. In other words, the costs will be discounted to the cost of the first milestone year.\ndiscount_rate: technology-specific discount rates.\neconomic_lifetime: used for discounting the costs.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"info: Info\nSince the model explicitly discounts, all the inputs for costs should be given in the costs of the relevant year. For example, to model investments in 2030 and 2050, the investment_cost should be given in 2030 costs and 2050 costs, respectively.","category":"page"},{"location":"10-how-to-use/","page":"How to Use","title":"How to Use","text":"For more details on the formulas for economic representation, please visit the mathematical formulation section.","category":"page"},{"location":"60-structures/#structures","page":"Model Structures","title":"Model Structures","text":"","category":"section"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"Pages = [\"60-structures.md\"]\nDepth = 3","category":"page"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"The list of relevant structures used in this package are listed below:","category":"page"},{"location":"60-structures/#EnergyProblem","page":"Model Structures","title":"EnergyProblem","text":"","category":"section"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"The EnergyProblem structure is a wrapper around various other relevant structures. It hides the complexity behind the energy problem, making the usage more friendly, although more verbose.","category":"page"},{"location":"60-structures/#Fields","page":"Model Structures","title":"Fields","text":"","category":"section"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"db_connection: A DuckDB connection to the input tables in the model.\nvariables: A dictionary of TulipaVariables containing the variables of the model.\nexpressions: A dictionary of TulipaExpressions containing the expressions of the model attached to tables.\nconstraints: A dictionary of TulipaConstraints containing the constraints of the model.\nprofiles: Holds the profiles per rep_period or over_clustered_year in dictionary format. See ProfileLookup.\nmodel_parameters: A ModelParameters structure to store all the parameters that are exclusive of the model.\nmodel: A JuMP.Model object representing the optimization model.\nsolved: A boolean indicating whether the model has been solved or not.\nobjective_value: The objective value of the solved problem (Float64).\ntermination_status: The termination status of the optimization model.","category":"page"},{"location":"60-structures/#Constructor","page":"Model Structures","title":"Constructor","text":"","category":"section"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"The EnergyProblem can also be constructed using the minimal constructor below.","category":"page"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"EnergyProblem(connection): Constructs a new EnergyProblem object with the given connection that has been created and the data loaded into it using TulipaIO. The graph, representative_periods, timeframe, and years are computed using create_internal_structures.","category":"page"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"See the basic example tutorial to see how these can be used.","category":"page"},{"location":"60-structures/#GraphAssetData","page":"Model Structures","title":"GraphAssetData","text":"","category":"section"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"This structure holds all the information of a given asset. These are stored inside the Graph. Given a graph graph, an asset a can be accessed through graph[a].","category":"page"},{"location":"60-structures/#GraphFlowData","page":"Model Structures","title":"GraphFlowData","text":"","category":"section"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"This structure holds all the information of a given flow. These are stored inside the Graph. Given a graph graph, a flow from asset u to asset v can be accessed through graph[u, v].","category":"page"},{"location":"60-structures/#timeframe","page":"Model Structures","title":"Timeframe","text":"","category":"section"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"The timeframe is the total period we want to analyze with the model. Usually this is a year, but it can be any length of time. A timeframe has two fields:","category":"page"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"num_periods: The timeframe is defined by a certain number of periods. For instance, a year can be defined by 365 periods, each describing a day.\nmap_periods_to_rp: Indicates the periods of the timeframe that map into a representative period and the weight of the representative period to construct that period.","category":"page"},{"location":"60-structures/#representative-periods","page":"Model Structures","title":"Representative Periods","text":"","category":"section"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"The timeframe (e.g., a full year) is described by a selection of representative periods, for instance, days or weeks, that nicely summarize other similar periods. For example, we could model the year into 3 days, by clustering all days of the year into 3 representative days. Each one of these days is called a representative period. TulipaEnergyModel.jl has the flexibility to consider representative periods of different lengths for the same timeframe (e.g., a year can be represented by a set of 4 days and 2 weeks). To obtain the representative periods, we recommend using TulipaClustering.","category":"page"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"A representative period has three fields:","category":"page"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"weight: Indicates how many representative periods are contained in the timeframe; this is inferred automatically from map_periods_to_rp in the timeframe.\ntimesteps: The number of timesteps blocks in the representative period.\nresolution: The duration in time of each timestep.","category":"page"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"The number of timesteps and resolution work together to define the coarseness of the period. Nothing is defined outside of these timesteps; for instance, if the representative period represents a day and you want to specify a variable or constraint with a coarseness of 30 minutes. You need to define the number of timesteps to 48 and the resolution to 0.5.","category":"page"},{"location":"60-structures/#time-blocks","page":"Model Structures","title":"Time Blocks","text":"","category":"section"},{"location":"60-structures/","page":"Model Structures","title":"Model Structures","text":"A time block is a range for which a variable or constraint is defined. It is a range of numbers, i.e., all integer numbers inside an interval. Time blocks are used for the periods in the timeframe and the timesteps in the representative period. Time blocks are disjunct (not overlapping), but do not have to be sequential.","category":"page"},{"location":"30-concepts/#concepts","page":"Concepts","title":"Concepts","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Pages = [\"30-concepts.md\"]\nDepth = 3","category":"page"},{"location":"30-concepts/#concepts-summary","page":"Concepts","title":"Summary","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"TulipaEnergyModel.jl incorporates two fundamental concepts that serve as the foundation of the optimization model:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Energy Assets: representation of a physical asset that can produce, consume, store, balance, or convert energy. Some examples of what these assets can represent are:\nProducer: e.g., wind turbine, solar panel\nConsumer: e.g., electricity demand, heat demand\nStorage: e.g., battery, pumped-hydro storage\nBalancing Hub: e.g., an electricity network that serves as a connection among other energy assets\nConversion: e.g., power plants, electrolyzers\nFlows: representation of the connections among assets, e.g., pipelines, transmission lines, or simply the energy production that goes from one asset to another.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"In a nutshell, the model guarantees a balance of energy for the various types of assets while considering the flow limits. It considers a set of representative periods (e.g., days or weeks) for a given timeframe (e.g., a year) the user wants to analyze. Therefore, the model has two types of temporal (time) constraints to consider the different chronology characteristics of the assets:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Intra-temporal Constraints: These constraints limit the asset or flow within a representative period. The intra-temporal constraints help to characterize the short-term operational dynamics of the assets. So far, the model considers balance and flow limitations within the representative period, as well as unit commitment and ramping. In the future, reserve constraints will also be included.\nInter-temporal Constraints: These constraints combine the information of the representative periods and create limitations between them to recover chronological information across the whole timeframe. The inter-temporal constraints help to characterize the long-term operational dynamics of the assets (e.g., seasonality). So far, the model uses this type of constraint to model seasonal storage. Future developments will include, for example, maximum or minimum production/consumption for a year (or any timeframe).","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The mathematical formulation shows an overview of these constraints and the variables in the model.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Another essential concept in the model is the flexible time resolution, which allows for each asset to be considered in a single timestep (e.g., 1, 2, 3...) or in a range of timesteps (e.g., 1:3, meaning that the asset's variable represents the value of timesteps 1, 2, and 3). This concept allows the modeling of different dynamics depending on the asset; for instance, electricity assets can be modeled hourly, whereas hydrogen assets can be modeled in a 6-hour resolution (avoiding creating unnecessary constraints and variables).","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The following sections explain these concepts in more detail.","category":"page"},{"location":"30-concepts/#flex-asset-connection","page":"Concepts","title":"Flexible Connection of Energy Assets","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"In energy system modeling, it is becoming common to have hybrid assets like storage + renewable (e.g., battery + solar), electrolyzer + renewable (e.g., electrolyzer + wind), or renewable + hydro (e.g., solar + hydro) that are located at the same site and share a common connection point to the grid. The standard method of modeling these assets requires extra variables and constraints for them to function correctly. For example, flows from the grid are not allowed, as they either avoid charging from the grid or require green hydrogen production. Therefore, hybrid connections typically require an additional node to regulate this connection with the grid.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The representation of the energy system in TulipaEnergyModel.jl is based on Graph Theory, which deals with the connection between vertices by edges. This representation provides a more flexible framework to model energy assets in the system as vertices and flows between energy assets as edges. By connecting assets directly to each other (i.e., without having a node in between), we reduce the number of variables and constraints needed to represent hybrid configurations, thus reducing the model size.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Consider the following example to demonstrate the benefits of using a graph theory approach. In the classic connection approach, the nodes play a crucial role in modeling. For instance, every asset must be connected to a node with balance constraints. When a storage asset and a renewable asset are in a hybrid connection like the one described before, a connection point is needed to connect the hybrid configuration to the rest of the system. Therefore, to consider the hybrid configuration of a storage asset and a renewable asset, we must introduce a node (i.e., a connection point) between these assets and the external power grid (i.e., a balance point), as shown in the following figure:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: Classic connection)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"In this system, the phs storage asset charges and discharges from the connection point, while the wind turbine produces power that goes directly to the connection point. This connection point is connected to the external power grid through a transmission line that leads to a balance hub that connects to other assets. Essentially, the connection point acts as a balancing hub point for the assets in this hybrid configuration. Furthermore, these hybrid configurations impose an extra constraint to avoid storage charges from the power grid.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Let's consider the modeling approach in TulipaEnergyModel.jl. As nodes are no longer needed to connect assets, we can connect them directly to each other, as shown in the figure below:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: Flexible connection)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"By implementing this approach, we can reduce the number of variables and constraints involved. For example, the balance constraint in the intermediate node and the extra constraint to avoid the storage charging from the power grid are no longer needed. Additionally, we can eliminate the variable determining the flow between the intermediate node and the power grid, because the flow from phs to balance can directly link to the external grid. The section comparison of different modeling approaches shows the quantification of these reductions.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"This example of a phs and a wind asset is useful for illustrating the advantages of this modeling approach and will be reused in the following sections. However, please keep in mind that there are other applications of hybrid configurations, such as battery-solar, hydro-solar, and electrolyzer-wind.","category":"page"},{"location":"30-concepts/#flex-time-res","page":"Concepts","title":"Flexible Time Resolution","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"One of the core features of TulipaEnergyModel.jl is that it can handle different time resolutions on the assets and the flows. Typically, the time resolution in an energy model is hourly, like in the following figure where we have a 6-hour energy system:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: Hourly Time Resolution)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Therefore, for this simple example, we can determine the number of constraints and variables in the optimization problem:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Number of variables: 42 since we have six connections among assets (i.e., 6 flows x 6 hours = 36 variables) and one storage asset (i.e., 1 storage level x 6 h = 6 variables)\nNumber of constraints: 72, which are:\n24 from the maximum output limit of the assets that produce, convert, or discharge energy (i.e., H2, wind, ccgt, and phs) for each hour (i.e., 4 assets x 6 h = 24 constraints)\n6 from the maximum input limit of the storage or charging limit for the phs\n6 from the maximum storage level limit for the phs\n12 from the import and export limits for the transmission line between the balance hub and the demand\n24 from the energy balance on the consumer, hub, conversion, and storage assets (i.e., demand, balance, ccgt, and phs) for each hour (i.e., 4 assets x 6 h = 24 constraints)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Depending on the input data and the level of detail you want to model, hourly resolution in all the variables might not be necessary. TulipaEnergyModel.jl can have different time resolutions for each asset and flow to simplify the optimization problem and approximate hourly representation. This feature is useful for large-scale energy systems that involve multiple sectors, as detailed granularity is not always necessary due to the unique temporal dynamics of each sector. For instance, we can use hourly resolution for the electricity sector and six-hour resolution for the hydrogen sector. We can couple multiple sectors, each with its own temporal resolution.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Let's explore the flexibility of time resolution with a few examples.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The following table shows the user input data for the definition of asset time resolution. Please note that the values presented in this example are just for illustrative purposes and do not represent a realistic case.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"using DataFrames # hide\nusing CSV # hide\ninput_asset_file = \"../../test/inputs/Variable Resolution/assets-rep-periods-partitions.csv\" # hide\nassets = CSV.read(input_asset_file, DataFrame, header = 1) # hide\nassets = assets[assets.asset .!= \"wind\", :] # hide","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The table shows that the H2 producer and the phs storage have a uniform definition of 6 hours. This definition means we want to represent the H2 production profile and the storage level of the phs every six hours.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The same time resolution can be specified for the flows, for example (again, the values are for illustrative purposes and do not represent a realistic case):","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"input_flow_file = \"../../test/inputs/Variable Resolution/flows-rep-periods-partitions.csv\" # hide\nflows_partitions = CSV.read(input_flow_file, DataFrame, header = 1) # hide","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The table shows a uniform definition for the flow from the hydrogen producer (H2) to the conversion asset (ccgt) of 6 hours, from the wind producer (wind) to the storage (phs) of 3 hours, and from the balance hub (balance) to the consumer (demand) of 3 hours, too. In addition, the flow from the wind producer (wind) to the balance hub (balance) is defined using the math specification of 1x2+1x4, meaning that there are two time blocks, one of two hours (i.e., 1:2) and another of four hours (i.e., 3:6). Finally, the flow from the storage (phs) to the balance hub (balance) is defined using the math specification of 1x4+1x2, meaning that there are two time blocks, one of four hours (i.e., 1:4) and another of two hours (i.e., 5:6).","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The following figure illustrates these definitions on the example system.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: Variable Time Resolution)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"So, let's recap:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The hydrogen producer (H2) is in a 6-hour resolution represented by the range 1:6, meaning that the balance of the hydrogen produced is for every 6 hours.\nThe flow from the hydrogen producer to the ccgt power plant (H2,ccgt) is also in a 6-hour resolution 1:6.\nThe flow from the ccgt power plant to the balance hub (ccgt, balance) has hourly resolution [1,2,3,4,5,6].\nThe ccgt is a conversion plant that takes hydrogen to produce electricity. Since both sectors have different time resolutions, the energy balance in the conversion asset is defined in the lowest resolution connecting to the asset. In this case, the energy balance in the ccgt is defined every 6 hours, i.e., in the range 1:6.\nThe wind producer has an hourly profile of electricity production, so the resolution of the asset is hourly.\nThe wind producer output has two connections, one to the balance hub and the other to the pumped-hydro storage (phs) with different resolutions:\nThe flow from the wind producer to the phs storage (wind, phs) has a uniform resolution of two blocks from hours 1 to 3 (i.e., 1:3) and from hours 4 to 6 (i.e., 4:6).\nThe flow from the wind producer to the balance hub (wind, balance) has a variable resolution of two blocks, too, but from hours 1 to 2 (i.e., 1:2) and from hours 3 to 6 (i.e., 3:6).\nThe phs is in a 6-hour resolution represented by the range 1:6, meaning the storage balance is determined every 6 hours.\nThe flow from the phs to the balance (phs, balance) represents the discharge of the phs. This flow has a variable resolution of two blocks from hours 1 to 4 (i.e., 1:4) and from hours 5 to 6 (i.e., 5:6), which differs from the one defined for the charging flow from the wind asset.\nThe demand consumption has hourly input data with one connection to the balance hub:\nThe flow from the balance hub to the demand (balance, demand) has a uniform resolution of 3 hours; therefore, it has two blocks, one from hours 1 to 3 (i.e., 1:3) and the other from hours 4 to 6 (i.e., 4:6).\nThe balance hub integrates all the different assets with their different resolutions. The lowest resolution of all connections determines the balance equation for this asset. Therefore, the resulting resolution is into two blocks, one from hours 1 to 4 (i.e., 1:4) and the other from hours 5 to 6 (i.e., 5:6).","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"tip: Fully flexible temporal resolution\nThis example demonstrates that different time resolutions can be assigned to each asset and flow in the model. Furthermore, the resolutions do not need to be multiples of one another or evenly distributed and they can vary throughout the time horizon.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The complete input data for this example can be found here.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Due to the flexible resolution, we must explicitly state how the constraints are constructed. For each constraint, three things need to be considered:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Whether it is type power or type energy.\ntype power: highest resolution\ntype energy: lowest resolution (multiplied by durations)\nHow the resolution is determined (regardless of whether it is highest or lowest): the incoming flows, the outgoing flows, or a combination of both.\nHow the related parameters are treated. We use two methods of aggregation, sum or mean.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Below is the table outlining the details for each type of constraint.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"tip: Before reading the table consider this:\nTo calculte the resolution of the constraints we use the min function to determine which is the highest resolution in the constraint, and the max function to determine the lowest resolution in the constraint. For example, the consumer balance is defined as power type, and it involves the inputs and outputs, then the constraint resolution must be the minimum resolution among them to ensure it is on the highest resolution. Then, if you have an input of 1h resolution and an output of 2h resolution; then the resolution of the constraint must be 1h (i.e., min(1h,2h)).","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Name Variables involved Profile involved Constraint type Resolution of the constraints Profile aggregation\nConsumer Balance inputs, outputs demand power min(incoming flows, outgoing flows) mean\nStorage Balance inputs, outputs, storage level inflows energy max(asset, min(incoming flows, outgoing flows)) sum\nHub Balance inputs, outputs - power min(incoming flows, outgoing flows) -\nConversion Balance inputs, outputs - energy max(incoming flows, outgoing flows) -\nProducers Capacity Constraints outputs availability power min(outgoing flows) mean\nStorage Capacity Constraints (outgoing) outputs - power min(outgoing flows) -\nConversion Capacity Constraints (outgoing) outputs - power min(outgoing flows) -\nConversion Capacity Constraints (incoming) inputs - power min(incoming flows) -\nStorage Capacity Constraints (incoming) inputs - power min(incoming flows) -\nTransport Capacity Constraints (upper bounds) flow availability power if it connects two hubs or demands then max(hub a,hub b), otherwise its own mean\nTransport Capacity Constraints (lower bounds) flow availability power if it connects two hubs or demands then max(hub a,hub b), otherwise its own mean\nMaximum Energy Limits (outgoing) outputs max_energy energy Determine by timeframe partitions. The default value is for each period in the timeframe sum\nMinimum Energy Limits (outgoing) outputs min_energy energy Determine by timeframe partitions. The default value is for each period in the timeframe sum\nMaximum Output Flow with Unit Commitment outputs, units_on availability power min(outgoing flows, units_on) mean\nMinimum Output Flow with Unit Commitment outputs, units_on availability power min(outgoing flows, units_on) mean\nMaximum Ramp Up Flow with Unit Commitment outputs, units_on availability power min(outgoing flows, units_on) mean\nMaximum Ramp Down Flow with Unit Commitment outputs, units_on availability power min(outgoing flows, units_on) mean\nMaximum Ramp Up Flow without Unit Commitment outputs availability power min(outgoing flows) mean\nMaximum Ramp Down Flow without Unit Commitment outputs availability power min(outgoing flows) mean","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"For this basic example, we can describe the balance and capacity constraints in the model. For the sake of simplicity, we consider only the intra-temporal constraints, the representative period index is dropped from the equations, and there are no investment variables in the equations.","category":"page"},{"location":"30-concepts/#Energy-Balance-Constraints","page":"Concepts","title":"Energy Balance Constraints","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"In the following sections, we lay out all the balance constraints of this example.","category":"page"},{"location":"30-concepts/#Storage-Balance","page":"Concepts","title":"Storage Balance","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"As shown in the table, the resolution of the storage balance is energy, which is calculated by max(asset, min(incoming flows, outgoing flows)). The resolutions of the incoming and outgoing flows of the storage are 1:3, 4:6, 1:4, and 5:6, resulting in a minimum resolution of 2. The resolution of the storage is 6. Then, max(asset, min(incoming flows, outgoing flows)) becomes max(6, min(3, (4, 2))) which results in 6, and thus this balance is for every 6 hours. The charging and discharging flows are multiplied by their durations to account for the energy in the range 1:6.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n textstorage_balance_textphs16 \n qquad v^textintra-storage_textphs16 = 3 cdot p^texteff_(textwindtextphs) cdot v^textflow_(textwindtextphs)13 + 3 cdot p^texteff_(textwindtextphs) cdot v^textflow_(textwindtextphs)46 \n qquad quad - frac4p^texteff_(textphstextbalance) cdot v^textflow_(textphstextbalance)14 - frac2p^texteff_(textphstextbalance) cdot v^textflow_(textphstextbalance)56 \nendaligned","category":"page"},{"location":"30-concepts/#Consumer-Balance","page":"Concepts","title":"Consumer Balance","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The flows coming from the balancing hub are defined every 3 hours. Then, min(incoming flows, outgoing flows) becomes min(3, -) = 3, and thus balanced every 3 hours. The input demand is aggregated as the mean of the hourly values in the input data.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n textconsumer_balance_textdemand13 \n qquad v^textflow_(textbalancetextdemand)13 = p^textpeak demand_textdemand cdot fracsum_b=1^3 p^textdemand profile_textdemandb3 \n textconsumer_balance_textdemand46 \n qquad v^textflow_(textbalancetextdemand)46 = p^textpeak demand_textdemand cdot fracsum_b=4^6 p^textdemand profile_textdemandb3 \nendaligned","category":"page"},{"location":"30-concepts/#Hub-Balance","page":"Concepts","title":"Hub Balance","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The hub balance is quite interesting because it integrates several flow resolutions. Remember that we didn't define any specific time resolution for this asset. Therefore, the highest resolution of all incoming and outgoing flows in the horizon implies that the hub balance must be imposed for all 6 blocks since min(incoming flows, outgoing flows) becomes min(1,2,3,4) = 1","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n texthub_balance_textbalance11 \n qquad v^textflow_(textbalancetextdemand)13 = v^textflow_(textccgttextbalance) 11 + v^textflow_(textwindtextbalance)12 + v^textflow_(textphstextbalance)14 \n texthub_balance_textbalance22 \n qquad v^textflow_(textbalancetextdemand)13 = v^textflow_(textccgttextbalance) 22 + v^textflow_(textwindtextbalance)12 + v^textflow_(textphstextbalance)14 \n texthub_balance_textbalance33 \n qquad v^textflow_(textbalancetextdemand)13 = v^textflow_(textccgttextbalance) 33 + v^textflow_(textwindtextbalance)36 + v^textflow_(textphstextbalance)14 \n texthub_balance_textbalance44 \n qquad v^textflow_(textbalancetextdemand)46 = v^textflow_(textccgttextbalance) 44 + v^textflow_(textwindtextbalance)36 + v^textflow_(textphstextbalance)14\n texthub_balance_textbalance55 \n qquad v^textflow_(textbalancetextdemand)46 = v^textflow_(textccgttextbalance) 55 + v^textflow_(textwindtextbalance)36 + v^textflow_(textphstextbalance)56 \n texthub_balance_textbalance66 \n qquad v^textflow_(textbalancetextdemand)46 = v^textflow_(textccgttextbalance) 66 + v^textflow_(textwindtextbalance)36 + v^textflow_(textphstextbalance)56 \nendaligned","category":"page"},{"location":"30-concepts/#Conversion-Balance","page":"Concepts","title":"Conversion Balance","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The flows connected to the CCGT conversion unit have different resolutions, too. In this case, the hydrogen imposes the lowest resolution; therefore, the energy balance in this asset is also every 6 hours.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n textconversion_balance_textccgt16 \n qquad 6 cdot p^texteff_(textH2textccgt) cdot v^textflow_(textH2textccgt)16 = frac1p^texteff_(textccgttextbalance) sum_b=1^6 v^textflow_(textccgttextbalance)b  \nendaligned","category":"page"},{"location":"30-concepts/#Capacity-Constraints","page":"Concepts","title":"Capacity Constraints","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"All capacity constraints are defined in the highest resolution to guarantee that the flows are below the limits of each asset capacity.","category":"page"},{"location":"30-concepts/#Storage-Capacity-Constraints","page":"Concepts","title":"Storage Capacity Constraints","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Since the storage unit only has one input and output, the capacity limit constraints are in the same resolution as the individual flows. Therefore, the constraints for the outputs of the storage (i.e., discharging capacity limit) are:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n textmax_output_flows_limit_textphs14 \n qquad v^textflow_(textphstextbalance)14 leq p^textinit capacity_textphs \n textmax_output_flows_limit_textphs56 \n qquad v^textflow_(textphstextbalance)56 leq p^textinit capacity_textphs \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"And the constraints for the inputs of the storage (i.e., charging capacity limit) are:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n textmax_input_flows_limit_textphs13 \n qquad v^textflow_(textwindtextphs)13 leq p^textinit capacity_textphs \n textmax_input_flows_limit_textphs46 \n qquad v^textflow_(textwindtextphs)46 leq p^textinit capacity_textphs \nendaligned","category":"page"},{"location":"30-concepts/#Conversion-Capacity-Constraints","page":"Concepts","title":"Conversion Capacity Constraints","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Similarly, each outflow is limited to the ccgt capacity for the conversion unit.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n textmax_output_flows_limit_textccgtb \n qquad v^textflow_(textccgttextbalance)b leq p^textinit capacity_textccgt quad forall b in 16 \nendaligned","category":"page"},{"location":"30-concepts/#Producer-Capacity-Constraints","page":"Concepts","title":"Producer Capacity Constraints","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The wind producer asset is interesting because the output flows are in different resolutions, i.e., 1:2, 3:6, 1:3, and 4:6. The highest resolution is 1:2, 3, and 4:6. Therefore, the constraints are as follows:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n textmax_output_flows_limit_textwind12 \n qquad v^textflow_(textwindtextbalance)12 + v^textflow_(textwindtextphs)13 leq fracp^textinit capacity_textwind2 cdot sum_b=1^2 p^textavailability profile_textwindb \n textmax_output_flows_limit_textwind3 \n qquad v^textflow_(textwindtextbalance)36 + v^textflow_(textwindtextphs)13 leq p^textinit capacity_textwind cdot p^textavailability profile_textwind3 \n textmax_output_flows_limit_textwind46 \n qquad v^textflow_(textwindtextbalance)36 + v^textflow_(textwindtextphs)46 leq fracp^textinit capacity_textwind3 cdot sum_b=4^6 p^textavailability profile_textwindb \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Since the flow variables v^textflow_(textwind textbalance)12 and v^textflow_(textwind textbalance)13 represent power, the first constraint sets the upper bound of the power for both timestep 1 and 2, by assuming an average capacity across these two timesteps. The same applies to the other two constraints.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The hydrogen (H2) producer capacity limit is straightforward, since both the asset and the flow definitions are in the same time resolution:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n textmax_output_flows_limit_textH216 \n qquad v^textflow_(textH2textccgt)16 leq p^textinit capacity_textH2 cdot p^textavailability profile_textH216 \nendaligned","category":"page"},{"location":"30-concepts/#Transport-Capacity-Constraints","page":"Concepts","title":"Transport Capacity Constraints","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"For the connection from the hub to the demand, there are associated transmission capacity constraints, which are in the same resolution as the flow:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n textmax_transport_flows_limit_(textbalancetextdemand)13 \n qquad v^textflow_(textbalancetextdemand)13 leq p^textinit export capacity_(textbalancetextdemand) \n textmax_transport_flows_limit_(textbalancetextdemand)46 \n qquad v^textflow_(textbalancetextdemand)46 leq p^textinit export capacity_(textbalancetextdemand) \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n textmin_transport_flows_limit_(textbalancetextdemand)13 \n qquad v^textflow_(textbalancetextdemand)13 geq - p^textinit import capacity_(textbalancetextdemand) \n textmin_transport_flows_limit_(textbalancetextdemand)46 \n qquad v^textflow_(textbalancetextdemand)46 geq - p^textinit import capacity_(textbalancetextdemand) \nendaligned","category":"page"},{"location":"30-concepts/#Storage-Level-limits","page":"Concepts","title":"Storage Level limits","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Since the system has a storage asset, we must limit the maximum storage level. The phs time resolution is defined for every 6 hours, so we only have one constraint.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n textmax_storage_level_limit_textphs16 \n qquad v^textintra-storage_textphs16 leq p^textinit storage capacity_textphs\nendaligned","category":"page"},{"location":"30-concepts/#comparison","page":"Concepts","title":"Comparison of Different Modeling Approaches","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"This section quantifies the advantages of the flexible connection and flexible time resolution in the TulipaEnergyModel.jl modeling approach. So, let us consider three different approaches based on the same example:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Classic approach with hourly resolution: This approach needs an extra asset, node, to create the hybrid operation of the phs and wind assets.\nFlexible connection with hourly resolution: This approach uses the flexible connection to represent the hybrid operation of the phs and wind assets.\nFlexible connection and flexible time: This approach uses both features, the flexible connection and the flexible time resolution.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"tip: Tip\nThe flexibility of TulipaEnergyModel.jl allows any of these three modeling approaches.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The table below shows the constraints and variables for each approach over a 6-hour horizon. These results show the potential of flexible connections and time resolution for reducing the size of the optimization model.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Modeling approach Nº Variables Nº Constraints Objective Function\nClassic approach with hourly resolution 48 84 28.4365\nFlexible connection with hourly resolution 42 72 28.4365\nFlexible connection and time resolution 16 29 28.4587","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"By comparing the classic approach with the other methods, we can analyze their differences:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The flexible connection with hourly resolution reduces 6 variables (125) and 12 constraints (approx 14). Notice that we include the 6 extra constraints related to not allowing charging from the grid, although these constraints can also be modeled as bounds. Finally, the objective function value is the same, since we use an hourly time resolution in both cases.\nThe combination of features reduces 32 variables (approx 67) and 55 constraints (approx 65) with an approximation error of approx 0073.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The level of reduction and approximation error will depend on the case study. Some cases that would benefit from this feature include:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Coupling different energy sectors with various dynamics. For instance, methane, hydrogen, and heat sectors can be represented in energy models with lower resolutions (e.g., 4, 6, or 12h) than the electricity sector, usually modeled in higher resolutions (e.g., 1h, 30 min).\nHaving high resolutions for all assets in a large-scale case study may not be necessary. For example, if analyzing a European case study focusing on a specific country like The Netherlands, hourly details for distant countries (such as Portugal and Spain) may not be required. However, one would still want to consider their effect on The Netherlands without causing too much computational burden. In such cases, flexible time resolution can maintain hourly details in the focus country, while reducing the detail in distant countries by increasing their resolution (to two hours or more). This reduction allows a broader scope without over-burdening computation.","category":"page"},{"location":"30-concepts/#flex-time-res-uc","page":"Concepts","title":"Flexible Time Resolution in the Unit Commitment and Ramping Constraints","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"In the previous section, we have seen how the flexible temporal resolution is handled for the model's flow capacity and balance constraints. Here, we show how flexible time resolution is applied when considering the model's unit commitment and ramping constraints. Let's consider the example in the folder test/inputs/UC-ramping to explain how all these constraints are created in TulipaEnergyModel.jl when having the flexible time resolution.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: unit-commitment-case-study)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The example demonstrates various assets that supply demand. Each asset has different input data files, which activates different sets of constraints based on the method. For example, the gas producer has ramping constraints but not unit commitment constraints, while the ocgt conversion has unit commitment constraints but not ramping constraints. Lastly, the ccgt and smr assets both have unit commitment and ramping constraints. Moreover, ccgt, wind, solar, and ocgt are investable, meaning that the investment variable will only appear on the constraints related to those assets.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"using DataFrames # hide\nusing CSV # hide\ninput_dir = \"../../test/inputs/UC-ramping\" # hide\nassets_data = CSV.read(joinpath(input_dir, \"asset-both.csv\"), DataFrame) # hide\ngraph_assets = CSV.read(joinpath(input_dir, \"asset.csv\"), DataFrame) # hide\nasset_milestone = CSV.read(joinpath(input_dir, \"asset-milestone.csv\"), DataFrame) # hide\nassets = leftjoin(graph_assets, assets_data, on=:asset) # hide\nassets = leftjoin(assets, asset_milestone, on=[:asset, :milestone_year]) # hide\nfiltered_assets = assets[assets.type .== \"producer\" .|| assets.type .== \"conversion\", [\"asset\", \"type\", \"capacity\", \"initial_units\", \"investable\", \"unit_commitment\",  \"ramping\", \"max_ramp_up\", \"max_ramp_down\"]] # hide","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The assets-rep-periods-partitions file defines the time resolution for the assets in the partition column. For instance, here we can see that the time resolutions are 3h for the ccgt and 6h for the smr. These values mean that the unit commitment variables (e.g., units_on) in the model have three and six hours resolution, respectively.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"assets_partitions_data = CSV.read(joinpath(input_dir, \"assets-rep-periods-partitions.csv\"), DataFrame, header = 1) # hide\nfiltered_assets_partitions = assets_partitions_data[!, [\"asset\", \"specification\", \"partition\"]] # hide","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The flows-rep-periods-partitions file defines the time resolution for the flows. In this example, we have that the flows from the gas asset to the ccgt and from the ccgt asset to the demand are in a 2h resolution.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"flows_partitions_data = CSV.read(joinpath(input_dir, \"flows-rep-periods-partitions.csv\"), DataFrame, header = 1) # hide\nfiltered_flows_partitions = flows_partitions_data[!, [\"from_asset\", \"to_asset\", \"specification\", \"partition\"]] # hide","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The default value for the assets and flows partitions is 1 hour. This means that assets and flows not in the previous tables are considered on an hourly basis in the model.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"warning: Not every combination of resolutions is viable\nIt's not recommended to set up the input data partitions in such a way that the flow variables have a lower resolution than the units_on. This is because doing so will result in constraints that fix the value of the units_on in the timestep block where the flow is defined, leading to unnecessary extra variable constraints in the model. For instance, if the units_on are hourly and the flow is every two hours, then a non-zero flow in the timestep block 1:2 will require the units_on in timestep blocks 1:1 and 2:2 to be the same and equal to one. Therefore, the time resolution of the units_on should always be lower than or equal to the resolution of the flow in the asset.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Remember that the section mathematical formulation shows the unit commitment and ramping constraints in the model considering an uniform time resolution as a reference.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"With this information, we can analyze the constraints in each of the following cases:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Ramping in assets with multiple outputs\nUnit commitment in assets with constant time resolution\nUnit commitment and ramping in assets with flexible time resolution that are multiples of each other\nUnit commitment and ramping in assets with flexible time resolution that are not multiples of each other","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"We will analyze each case in the following sections, considering the constraints resolution defined in the summary table in the flexible time resolution section. For the sake of simplicity, we only show the asset a and timestep block b_k index and the constraints as they appear in the .lp file of the example, i.e., with all the coefficients and RHS values calculated from the input parameters. The .lp file can be exported using the keyword argument write_lp_file = true in the run_scenario function.","category":"page"},{"location":"30-concepts/#Ramping-in-Assets-with-Multiple-Outputs","page":"Concepts","title":"Ramping in Assets with Multiple Outputs","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"In the case of the gas asset, there are two output flows above the minimum operating point with different time resolutions. The ramping constraints follow the highest time resolution of the two flows at each timestep block. Since the highest resolution is always defined by the hourly output of the v^textflow_(textgasocgt)b_k, the ramping constraints are also hourly. The figure below illustrates this situation.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: unit-commitment-gas-asset)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Let's now take a look at the resulting constraints in the model.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"max_ramp_up(gas): The first constraint considers the ramping up of output flows of the gas asset from the first hour to the second (b_k = 22 to b_k = 11). Note that since the v^textflow_(textgasccgt)b_k is defined in in blocks of 2 hours, we only need to consider the difference of the v^textflow_(textgasocgt)b_k variable in this constraint. However, the second constraint takes the difference between the output flows from b_k = 33 to b_k = 22. For this constraint, we need to consider the difference in both v^textflow_(textgasocgt)b_k and v^textflow_(textgasccgt)b_k.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"info: Info\nThe duration parameter in the right hand side (RHS) of this constraint, textRHS = p^textcapacity_textgas cdot p^textmax ramp up_textgas cdot p^textduration_b_k, is defined by the flow duration with the highest resolution, i.e., one hour, which is the duration of the v^textflow_(textgasocgt)b_k. We need to multiply by duration since the ramp input values are given as rates, i.e., p.u./h or p.u./min, so the RHS in the constraint must be multiplied by the duration to match the flow units. So, using the data for this example we have: textRHS = 1800 textMW cdot 083 textpuh cdot 1 texth = 1494 textMW","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n b_k = 22 - v^textflow_(textgasocgt)11 + v^textflow_(textgasocgt)22 leq 1494 \n b_k = 33 - v^textflow_(textgasocgt)22 + v^textflow_(textgasocgt)33 - v^textflow_(textgasccgt)12 + v^textflow_(textgasccgt)34 leq 1494 \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"For the maximum ramp down we have similiar constraints as the ones shown above.","category":"page"},{"location":"30-concepts/#Unit-Commitment-in-Assets-with-Constant-Time-Resolution","page":"Concepts","title":"Unit Commitment in Assets with Constant Time Resolution","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The ocgt asset includes both the v^textflow_(textocgtdemand)b_k and the asset time resolution, which defines the resolution of the units_on variable, with a default setting of one hour. As a result, the unit commitment constraints are also set on an hourly basis. This is the conventional method for representing these types of constraints in power system models. The figure below illustrates this situation.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: unit-commitment-ocgt-asset)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Let's now take a look at the resulting constraints in the model. Because everything is based on an hourly timestep, the equations are simple and easy to understand.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"limit_units_on(ocgt): The upper bound of the units_on is the investment variable of the asset","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n b_k = 11 v^textunits on_textocgt11 leq v^textinv_textocgt \n b_k = 22 v^textunits on_textocgt22 leq v^textinv_textocgt \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"min_output_flow(ocgt): The minimum operating point is 10 MW, so the asset must produce an output flow greater than this value when the unit is online.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n b_k = 11 v^textflow_(textocgtdemand)11 geq 10 cdot v^textunits on_textocgt11  \n b_k = 22 v^textflow_(textocgtdemand)22 geq 10 cdot v^textunits on_textocgt22  \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"max_output_flow(ocgt): The capacity is 100 MW, so the asset must produce an output flow lower than this value when the unit is online.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n b_k = 11 v^textflow_(textocgtdemand)11 leq 100 cdot v^textunits on_textocgt11 \n b_k = 22 v^textflow_(textocgtdemand)22 leq 100 cdot v^textunits on_textocgt22 \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"For the maximum ramp down we have similiar constraints as the ones shown above.","category":"page"},{"location":"30-concepts/#Unit-Commitment-and-Ramping-in-Assets-with-Flexible-Time-Resolution-that-are-Multiples-of-Each-Other","page":"Concepts","title":"Unit Commitment and Ramping in Assets with Flexible Time Resolution that are Multiples of Each Other","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"In this case, the smr asset has an output v^textflow_(textsmrdemand)b_k in a hourly basis, but its time resolution (i.e., partition) is every six hours. Therefore, the unist_on variables are defined in timestep block of every six hours. As a result, the unit commitment and ramping constraints are set on highest resolution of both, i.e., the hourly resolution of the v^textflow_(textsmrdemand)b_k. The figure below illustrates this situation.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: unit-commitment-smr-asset)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Let's now take a look at the resulting constraints in the model.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"limit_units_on(smr): The units_on variables are defined every 6h; therefore, the upper bound of the variable is also every 6h. In addition, the smr is not investable and has one existing unit that limits the commitment variables.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n b_k = 16  v^textunits on_textsmr16  leq 1 \n b_k = 712 v^textunits on_textsmr712 leq 1 \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"min_output_flow(smr): The minimum operating point is 150 MW, so the asset must produce an output flow greater than this value when the unit is online. Since the units_on variables are defined every 6h, the first six constraints show that the minimum operating point is multiplied by the variable in block 1:6. The next six constraints are multiplied by the units_on in block 7:12, and so on.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n b_k = 11 v^textflow_(textsmrdemand)11 geq 150 cdot v^textunits on_textsmr16 \n b_k = 22 v^textflow_(textsmrdemand)22 geq 150 cdot v^textunits on_textsmr16 \n  \n b_k = 66 v^textflow_(textsmrdemand)66 geq 150 cdot v^textunits on_textsmr16  \n b_k = 77 v^textflow_(textsmrdemand)77 geq 150 cdot v^textunits on_textsmr712 \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"max_output_flow(smr): The capacity is 200 MW, so the asset must produce an output flow lower than this value when the unit is online. Similiar to the minimum operating point constraint, here the units_on for the timestep block 1:6 are used in the first six constraints, the units_on for the timestep block 7:12 are used in the next six constraints, and so on.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n b_k = 11 v^textflow_(textsmrdemand)11 leq 200 cdot v^textunits on_textsmr16  \n b_k = 22 v^textflow_(textsmrdemand)22 leq 200 cdot v^textunits on_textsmr16  \n  \n b_k = 66 v^textflow_(textsmrdemand)66 leq 200 cdot v^textunits on_textsmr16  \n b_k = 77 v^textflow_(textsmrdemand)77 leq 200 cdot v^textunits on_textsmr712 \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"max_ramp_up(smr): The ramping capacity is 20MW, so the change in the output flow above the minimum operating point needs to be below that value when the asset is online. For constraints from 2:2 to 6:6, the units_on variable is the same, i.e., units_on at timestep block 1:6. The ramping constraint at timestep block 7:7 shows the units_on from the timestep block 1:6 and 7:12 since the change in the flow includes both variables. Note that if the units_on variable is zero in the timestep block 1:6, then the ramping constraint at timestep block 7:7 allows the asset to go from zero flow to the minimum operating point plus the ramping capacity (i.e., 150 + 20 = 170).","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n b_k = 22 - v^textflow_(textsmrdemand)11 + v^textflow_(textsmrdemand)22 leq 20 cdot v^textunits on_textsmr16 \n b_k = 33 - v^textflow_(textsmrdemand)22 + v^textflow_(textsmrdemand)33 leq 20 cdot v^textunits on_textsmr16 \n  \n b_k = 66 - v^textflow_(textsmrdemand)55 + v^textflow_(textsmrdemand)66 leq 20 cdot v^textunits on_textsmr16 \n b_k = 77 - v^textflow_(textsmrdemand)66 + v^textflow_(textsmrdemand)77 leq - 150 cdot v^textunits on_textsmr16 + 170 cdot v^textunits on_textsmr712 \n b_k = 88 - v^textflow_(textsmrdemand)77 + v^textflow_(textsmrdemand)88 leq 20 cdot v^textunits on_textsmr712 \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"For the maximum ramp down we have similiar constraints as the ones shown above.","category":"page"},{"location":"30-concepts/#Unit-Commitment-and-Ramping-in-Assets-with-Flexible-Time-Resolution-that-are-NOT-Multiples-of-Each-Other","page":"Concepts","title":"Unit Commitment and Ramping in Assets with Flexible Time Resolution that are NOT Multiples of Each Other","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"In this case, the ccgt asset has an output v^textflow_(textccgtdemand)b_k on a two-hour basis, but its time resolution (i.e., partition) is every three hours. Therefore, the unist_on variables are defined in a timestep block every three hours. This setup means that the flow and unit commitment variables are not multiples of each other. As a result, the unit commitment and ramping constraints are defined on the highest resolution, meaning that we also need the intersections of both resolutions. The figure below illustrates this situation.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: unit-commitment-ccgt-asset)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Let's now take a look at the resulting constraints in the model.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"limit_units_on(ccgt): The units_on variables are defined every 3h; therefore, the upper bound of the variable is also every 3h. In addition, the ccgt is investable and has one existing unit that limits the commitment variables.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n  b_k = 13  v^textunits on_textccgt13 leq 1 + v^textinv_textccgt \n  b_k = 46  v^textunits on_textccgt46 leq 1 + v^textinv_textccgt \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"min_output_flow(ccgt): The minimum operating point is 50 MW, so the asset must produce an output flow greater than this value when the unit is online. Here, we can see the impact of the constraints of having different temporal resolutions that are not multiples of each other. For instance, the constraint is defined for all the intersections, so 1:2, 3:3, 4:4, 5:6, etc., to ensure that the minimum operating point is correctly defined considering all the timestep blocks of the flow and the units_on variables.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n b_k = 12 v^textflow_(textccgtdemand)12 geq 50 cdot v^textunits on_textccgt13 \n b_k = 33 v^textflow_(textccgtdemand)34 geq 50 cdot v^textunits on_textccgt13 \n b_k = 44 v^textflow_(textccgtdemand)34 geq 50 cdot v^textunits on_textccgt46 \n b_k = 56 v^textflow_(textccgtdemand)56 geq 50 cdot v^textunits on_textccgt46 \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"max_output_flows(ccgt): The capacity is 200 MW, so the asset must produce an output flow lower than this value when the unit is online. The situation is similar as in the minimum operating point constraint, we have constraints for all the intersections of the resolutions to ensure the correct definition of the maximum capacity.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n b_k = 12 v^textflow_(textccgtdemand)12 leq 200 cdot v^textunits on_textccgt13 \n b_k = 33 v^textflow_(textccgtdemand)34 leq 200 cdot v^textunits on_textccgt13 \n b_k = 44 v^textflow_(textccgtdemand)34 leq 200 cdot v^textunits on_textccgt46 \n b_k = 56 v^textflow_(textccgtdemand)56 leq 200 cdot v^textunits on_textccgt46 \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"max_ramp_up(ccgt): The ramping capacity is 120MW, so the change in the output flow above the minimum operating point needs to be below that value when the asset is online. When the time resolutions of the flow and units_on are not multiples of each other, we encounter some counterintuitive constraints. For example, consider the constraint at timestep block 4:4. This constraint only involves units_on variables because the flow above the minimum operating point at timestep block 4:4 differs from the previous timestep block 3:3 only in terms of the units_on variables. As a result, the ramping-up constraint establishes a relationship between the units_on variable at 1:3 and 4:6. This means that if the unit is on at timestep 1:3, then it must also be on at timestep 4:6. However, this is redundant because there is already a flow variable defined for 3:4 that ensures this, thanks to the minimum operating point and maximum capacity constraints. Therefore, although this constraint is not incorrect, it is unnecessary due to the flexible time resolutions that are not multiples of each other.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"beginaligned\n b_k = 33 - v^textflow_(textccgtdemand)12 + v^textflow_(textccgtdemand)34 leq 120 cdot v^textunits on_textccgt13 \n b_k = 44 0 leq - 50 cdot v^textunits on_textccgt13 + 170 cdot v^textunits on_textccgt46 \n b_k = 56 - v^textflow_(textccgtdemand)34 + v^textflow_(textccgtdemand)56 leq 120 cdot v^textunits on_textccgt46 \n b_k = 78 - v^textflow_(textccgtdemand)56 + v^textflow_(textccgtdemand)78 leq - 50 cdot v^textunits on_textccgt46 + 170 cdot v^textunits on_textccgt79 \n b_k = 99 - v^textflow_(textccgtdemand)78 + v^textflow_(textccgtdemand)910 leq 120 cdot v^textunits on_textccgt79 \n \nendaligned","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"For the maximum ramp down we have similiar constraints as the ones shown above.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"warning: Avoiding redundant constraints\nThe time resolutions of the unit commitment constraints do not have to be multiples of each other. However, using multiples of each other can help avoid extra redundant constraints.","category":"page"},{"location":"30-concepts/#Unit-Commitment-and-Ramping-Case-Study-Results","page":"Concepts","title":"Unit Commitment and Ramping Case Study Results","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Let's now optimize the model for the data in the example test/inputs/UC-ramping and explore the results. The first result is the unit commitment of the assets with this method, i.e., ocgt, ccgt, and smr. One of the characteristics of having flexible time resolution on the unit commitment variables (e.g., units_on) is that it allows us to consider implicitly minimum up/down times in a simplified manner. For instance, the ccgt asset can only increase the number of units every 3h, and the smr can only start up again after 6h.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: unit-commitment-results)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Let's now examine the hourly production balance in the results. We can see that the assets with a unit commitment method only produce electricity (e.g., flow to the demand asset) when they are on (units_on >= 1). In addition, the smr has a slow flow change due to its ramping limits.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: unit-commitment-balance)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"In this example, we demonstrated the use of unit commitment and ramping constraints with flexible time resolution in the model, and we illustrated what the results look like. The flexible time resolution applied to the unit commitment variables aids in minimizing the number of binary/integer variables in the model and simplifies the representation of the assets' minimum up and down times.","category":"page"},{"location":"30-concepts/#storage-modeling","page":"Concepts","title":"Storage Modeling","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Energy storage systems can be broadly classified into two categories: seasonal and non-seasonal storage. Seasonal storage refers to assets that can store energy for more extended periods, usually spanning months or even years. Examples of such assets include hydro reservoirs, hydrogen storage in salt caverns, or empty gas fields. On the other hand, non-seasonal storage refers to assets that can store energy only for a few hours, such as batteries or small pumped-hydro storage units.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Both storage categories can be represented in TulipaEnergyModel.jl using the representative periods approach:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Non-seasonal storage: When the storage capacity of an asset is lower than the total length of representative periods, like in the case of a battery with a storage capacity of 4 hours and representative periods of 24-hour timesteps, intra-temporal constraints should be applied.\nSeasonal storage: When the storage capacity of an asset is greater than the total length of representative periods, like in the case of a hydroplant with a storage capacity of a month and representative periods of 24-hour timesteps, inter-temporal constraints should be applied.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The equations of intra- and inter-temporal constraints for energy storage are available in the mathematical formulation. An example is shown in the following section to explain these concepts. In addition, the section seasonal and non-seasonal storage setup shows how to set the parameters in the model to consider each type in the storage assets.","category":"page"},{"location":"30-concepts/#Example-to-Model-Seasonal-and-Non-seasonal-Storage","page":"Concepts","title":"Example to Model Seasonal and Non-seasonal Storage","text":"","category":"section"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"We use the example in the folder test/inputs/Storage to explain how all these concepts come together in TulipaEnergyModel.jl.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Let's first look at this feature's most relevant input data in the input files. Here, we show only the storage assets and the appropriate columns for this example, but all the input data can be found in the previously mentioned folder.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"using DataFrames # hide\nusing CSV # hide\ninput_dir = \"../../test/inputs/Storage\" # hide\nassets_data = CSV.read(joinpath(input_dir, \"asset-both.csv\"), DataFrame) # hide\ngraph_assets = CSV.read(joinpath(input_dir, \"asset.csv\"), DataFrame) # hide\nassets = leftjoin(graph_assets, assets_data, on=:asset) # hide\nfiltered_assets = assets[assets.type .== \"storage\", [\"asset\", \"type\", \"capacity\", \"capacity_storage_energy\",  \"is_seasonal\"]] # hide","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The is_seasonal parameter determines whether or not the storage asset uses the inter-temporal constraints. The phs is the only storage asset with this type of constraint and inter-storage level variable (i.e., v^textinter-storage_textphsp), and has 100MW capacity and 4800MWh of storage capacity (i.e., 48h discharge duration). The battery will only consider intra-temporal constraints with intra-storage level variables (i.e., v^textintra-storage_textbatterykb_k), and has 10MW capacity with 20MWh of storage capacity (i.e., 2h discharge duration).","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The rep-periods-data file has information on the representative periods in the example. We have three representative periods, each with 24 timesteps and hourly resolution, representing a day. The figure below shows the availability profile of the renewable energy sources in the example.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"rp_file = \"../../test/inputs/Storage/rep-periods-data.csv\" # hide\nrp = CSV.read(rp_file, DataFrame, header = 1) # hide","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: availability-profiles)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The rep-periods-mapping relates each representative period with the periods in the timeframe. We have seven periods in this case, meaning the timeframe is a week. Each value in the file indicates the weight of each representative period in the timeframe period. Notice that each period is composed of a linear combination of the representative periods. For more details on obtaining the representative periods and the weights, please look at TulipaClustering.jl. For the sake of readability, we show here the information in the file in tabular form:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"map_file = \"../../test/inputs/Storage/rep-periods-mapping.csv\" # hide\nmap = CSV.read(map_file, DataFrame, header = 1) # hide\nunstacked_map = unstack(map, :period, :rep_period, :weight) # hide\nrename!(unstacked_map, [\"period\", \"k=1\", \"k=2\", \"k=3\"]) # hide\nunstacked_map[!,[\"k=1\", \"k=2\", \"k=3\"]] = convert.(Float64, unstacked_map[!,[\"k=1\", \"k=2\", \"k=3\"]]) # hide\nunstacked_map # hide","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"The file assets-timeframe-partitions has the information on how often we want to evaluate the inter-temporal constraints that combine the information of the representative periods. In this example, the file is missing in the folder, meaning that the default of a uniform distribution of one period will be use in the model, see model parameters section. This assumption implies that the model will check the inter-storage level every day of the week timeframe.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"info: Info\nFor the sake of simplicity, we show how using three representative days can recover part of the chronological information of one week. The same method can be applied to more representative periods to analyze the seasonality across a year or longer timeframe.","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Now let's solve the example and explore the results:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"using DuckDB, TulipaIO, TulipaEnergyModel\n\ninput_dir = \"../../test/inputs/Storage\" # hide\n# input_dir should be the path to the Storage example\nconnection = DBInterface.connect(DuckDB.DB)\nread_csv_folder(connection, input_dir; schemas = TulipaEnergyModel.schema_per_table_name)\nenergy_problem = run_scenario(connection)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Since the battery is not seasonal, it only has results for the intra-storage level of each representative period, as shown in the following figure:","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: Battery-intra-storage-level)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"Since the phs is defined as seasonal, it has results for only the inter-storage level. Since we defined the period partition as 1, we get results for each period (i.e., day). We can see that the inter-temporal constraints in the model keep track of the storage level through the whole timeframe definition (i.e., week).","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"(Image: PHS-inter-storage-level)","category":"page"},{"location":"30-concepts/","page":"Concepts","title":"Concepts","text":"In this example, we have demonstrated how to partially recover the chronological information of a storage asset with a longer discharge duration (such as 48 hours) than the representative period length (24 hours). This feature enables us to model both short- and long-term storage in TulipaEnergyModel.jl.","category":"page"},{"location":"91-developer/#developer","page":"Developer Documentation","title":"Developer Documentation","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Welcome to TulipaEnergyModel.jl developer documentation. Here is how you can contribute to our Julia-based toolkit for modeling and optimization of electric energy systems.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Pages = [\"91-developer.md\"]\nDepth = 3","category":"page"},{"location":"91-developer/#Before-You-Begin","page":"Developer Documentation","title":"Before You Begin","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Before you can start contributing, please read our Contributing Guidelines.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Also make sure that you have installed the required software, and that it is properly configured. You only need to do this once.","category":"page"},{"location":"91-developer/#Installing-Software","page":"Developer Documentation","title":"Installing Software","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"To contribute to TulipaEnergyModel.jl, you need the following:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Julia programming language.\nGit for version control.\nVSCode or any other editor. For VSCode, we recommend to install a few extensions. You can do it by pressing Ctrl + Shift + X (or ⇧ + ⌘ + X on MacOS) and searching by the extension name. - Julia for Visual Studio Code; - Git Graph.\nEditorConfig for consistent code formatting. In VSCode, it is available as an extension.\npre-commit to run the linters and formatters.\nYou can install pre-commit globally using\npip install --user pre-commit\nIf you prefer to create a local environment with it, do the following:\npython -m venv env\n. env/bin/activate\npip install --upgrade pip setuptools pre-commit\nOn Windows, you need to activate the environment using the following command instead of the previous one:\nenv/Scripts/activate\nNote that there is no leading dot (.) in the above command.\nJuliaFormatter.jl for code formatting.\nTo install it, open Julia REPL, for example, by typing in the command line:\njulia\nNote: julia must be part of your environment variables to call it from the command line.\nThen press <kbd>]</kbd> to enter the package mode. In the package mode, enter the following:\npkg> activate\npkg> add JuliaFormatter\nIn VSCode, you can activate \"Format on Save\" for JuliaFormatter. To do so, open VSCode Settings (<kbd>Ctrl</kbd> + <kbd>,</kbd>), then in \"Search Settings\", type \"Format on Save\" and tick the first result:\n(Image: Screenshot of Format on Save option)\nPrettier for markdown formatting. In VSCode, it is available as an extension.\nHaving enabled \"Format on Save\" for JuliaFormatter in the previous step will also enable \"Format on Save\" for Prettier, provided that Prettier is set as the default formatter for markdown files. To do so, in VSCode, open any markdown file, right-click on any area of the file, choose \"Format Document With...\", click \"Configure Default Formatter...\" situated at the bottom of the drop-list list at the top of the screen, and then choose Prettier - Code formatter as the default formatter. Once you are done, you can double-check it by again right-clicking on any area of the file and choosing \"Format Document With...\", and you should see Prettier - Code formatter (default).\nLocalCoverage for coverage testing. You can install it the same way you installed JuliaFormatter, that is, by opening Julia REPL in the package mode and typing:\npkg> activate\npkg> add LocalCoverage","category":"page"},{"location":"91-developer/#Forking-the-Repository","page":"Developer Documentation","title":"Forking the Repository","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Any changes should be done in a fork. You can fork this repository directly on GitHub:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"(Image: Screenshot of Fork button on GitHub)","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"After that, clone your fork and add this repository as upstream:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"git clone https://github.com/your-name/TulipaEnergyModel.jl                   # use the fork URL\ngit remote add upstream https://github.com/TulipaEnergy/TulipaEnergyModel.jl  # use the original repository URL","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Check that your origin and upstream are correct:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"git remote -v","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"You should see something similar to: (Image: Screenshot of remote names, showing origin and upstream)","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"If your names are wrong, use this command (with the relevant names) to correct it:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"git remote set-url [name] [url]","category":"page"},{"location":"91-developer/#Configuring-Git","page":"Developer Documentation","title":"Configuring Git","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Because operating systems use different line endings for text files, you need to configure Git to ensure code consistency across different platforms. You can do this with the following commands:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"cd /path/to/TulipaEnergyModel.jl\ngit config --unset core.autocrlf         # disable autocrlf in the EnergyModel repo\ngit config --global core.autocrlf false  # explicitly disable autocrlf globally\ngit config --global --unset core.eol     # disable explicit file-ending globally\ngit config core.eol lf                   # set Linux style file-endings in EnergyModel","category":"page"},{"location":"91-developer/#Activating-and-Testing-the-Package","page":"Developer Documentation","title":"Activating and Testing the Package","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Start Julia REPL either via the command line or in the editor.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"In the terminal, do:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"cd /path/to/TulipaEnergyModel.jl  # change the working directory to the repo directory if needed\njulia                             # start Julia REPL","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"In VSCode, first open your cloned fork as a new project. Then open the command palette with <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>P</kbd> (or <kbd>⇧</kbd> + <kbd>⌘</kbd> + <kbd>P</kbd> on MacOS) and use the command called Julia: Start REPL.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"In Julia REPL, enter the package mode by pressing <kbd>]</kbd>.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"In the package mode, first activate and instantiate the project, then run the tests to ensure that everything is working as expected:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"pkg> activate .   # activate the project\npkg> instantiate  # instantiate to install the required packages\npkg> test         # run the tests","category":"page"},{"location":"91-developer/#Configuring-Linting-and-Formatting","page":"Developer Documentation","title":"Configuring Linting and Formatting","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"With pre-commit installed, activate it as a pre-commit hook:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"pre-commit install","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"To run the linting and formatting manually, enter the command below:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"pre-commit run -a","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Do it once now to make sure that everything works as expected.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Now, you can only commit if all the pre-commit tests pass.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Note: On subsequent occasions when you need to run pre-commit in a new shell, you will need to activate the Python virtual environment. If so, do the following:. env/bin/activate  # for Windows the command is: . env/Scripts/activate\npre-commit run -a","category":"page"},{"location":"91-developer/#Code-format-and-guidelines","page":"Developer Documentation","title":"Code format and guidelines","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"This section will list the guidelines for code formatting not enforced by JuliaFormatter. We will try to follow these during development and reviews.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Naming\nCamelCase for classes and modules,\nsnake_case for functions and variables, and\nkebab-case for file names.\nUse using instead of import, in the following way:\nDon't use pure using Package, always list all necessary objects with using Package: A, B, C.\nList obvious objects, e.g., using JuMP: @variable, since @variable is obviously from JuMP in this context, or using Graph: SimpleDiGraph, because it's a constructor with an obvious name.\nFor other objects inside Package, use using Package: Package and explicitly call Package.A to use it, e.g., DataFrames.groupby.\nList all using in <src/TulipaEnergyModel.jl>.\nExplicitly state what a function will return; if returning nothing, simply use return.","category":"page"},{"location":"91-developer/#Contributing-Workflow","page":"Developer Documentation","title":"Contributing Workflow","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"When the software is installed and configured, and you have forked the TulipaEnergyModel.jl repository, you can start contributing to it.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"We use the following workflow for all contributions:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Make sure that your fork is up to date\nCreate a new branch\nImplement the changes\nRun the tests\nRun the linter\nCommit the changes\nRepeat steps 3-6 until all necessary changes are done\nMake sure that your fork is still up to date\nCreate a pull request","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Below you can find detailed instructions for each step.","category":"page"},{"location":"91-developer/#1.-Make-Sure-That-Your-Fork-Is-Up-to-Date","page":"Developer Documentation","title":"1. Make Sure That Your Fork Is Up to Date","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Fetch from org remote, fast-forward your local main:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"git switch main\ngit fetch --all --prune\ngit merge --ff-only upstream/main","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Warning: If you have a conflict on your main, it will appear now. You can delete your old main branch usinggit reset --hard upstream/main","category":"page"},{"location":"91-developer/#2.-Create-a-New-Branch","page":"Developer Documentation","title":"2. Create a New Branch","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Create a branch to address the issue:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"git switch -c <branch_name>","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"If there is an associated issue, add the issue number to the branch name, for example, 123-short-description for issue #123.\nIf there is no associated issue and the changes are small, add a prefix such as \"typo\", \"hotfix\", \"small-refactor\", according to the type of update.\nIf the changes are not small and there is no associated issue, then create the issue first, so we can properly discuss the changes.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Note: Always branch from main, i.e., the main branch of your own fork.","category":"page"},{"location":"91-developer/#3.-Implement-the-Changes","page":"Developer Documentation","title":"3. Implement the Changes","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Implement your changes to address the issue associated with the branch.","category":"page"},{"location":"91-developer/#4.-Run-the-Tests","page":"Developer Documentation","title":"4. Run the Tests","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"In Julia:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"TulipaEnergyModel> test","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"To run the tests with code coverage, you can use the LocalCoverage package:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"julia> using LocalCoverage\n# ]\npkg> activate .\n# <backspace>\njulia> cov = generate_coverage()","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"This will run the tests, track line coverage and print a report table as output. Note that we want to maintain 100% test coverage. If any file does not show 100% coverage, please add tests to cover the missing lines.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"If you are having trouble reaching 100% test coverage, you can set your pull request to 'draft' status and ask for help.","category":"page"},{"location":"91-developer/#5.-Run-the-Linter","page":"Developer Documentation","title":"5. Run the Linter","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"In the bash/git bash terminal, run pre-commit:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":". env/bin/activate # if necessary (for Windows the command is: . env/Scripts/activate)\npre-commit run -a","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"If any of the checks failed, find in the pre-commit log what the issues are and fix them. Then, add them again (git add), rerun the tests & linter, and commit.","category":"page"},{"location":"91-developer/#6.-Commit-the-Changes","page":"Developer Documentation","title":"6. Commit the Changes","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"When the test are passing, commit the changes and push them to the remote repository. Use:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"git commit -am \"A short but descriptive commit message\" # Equivalent to: git commit -a -m \"commit msg\"\ngit push -u origin <branch_name>","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"When writing the commit message:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"use imperative, present tense (Add feature, Fix bug);\nhave informative titles;\nif necessary, add a body with details.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Note: Try to create \"atomic git commits\". Read The Utopic Git History to learn more.","category":"page"},{"location":"91-developer/#7.-Make-Sure-That-Your-Fork-Is-Still-Up-to-Date","page":"Developer Documentation","title":"7. Make Sure That Your Fork Is Still Up to Date","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"If necessary, fetch any main updates from upstream and rebase your branch into origin/main. For example, do this if it took some time to resolve the issue you have been working on. If you don't resolve conflicts locally, you will get conflicts in your pull request.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Do the following steps:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"git switch main                  # switch to the main branch\ngit fetch --all --prune          # fetch the updates\ngit merge --ff-only upstream/main  # merge as a fast-forward\ngit switch <branch_name>         # switch back to the issue branch\ngit rebase main <branch_name>    # rebase it","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"If it says that you have conflicts, resolve them by opening the file(s) and editing them until the code looks correct to you. You can check the changes with:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"git diff             # Check that changes are correct.\ngit add <file_name>\ngit diff --staged    # Another way to check changes, i.e., what you will see in the pull request.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Once the conflicts are resolved, commit and push.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"git status # Another way to show that all conflicts are fixed.\ngit rebase --continue\ngit push --force origin <branch_name>","category":"page"},{"location":"91-developer/#8.-Create-a-Pull-Request","page":"Developer Documentation","title":"8. Create a Pull Request","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"When there are no more conflicts and all the test are passing, create a pull request to merge your remote branch into the org main. You can do this on GitHub by opening the branch in your fork and clicking \"Compare & pull request\".","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"(Image: Screenshot of Compare & pull request button on GitHub)","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Fill in the pull request details:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Describe the changes.\nList the issue(s) that this pull request closes.\nFill in the collaboration confirmation.\n(Optional) Choose a reviewer.\nWhen all of the information is filled in, click \"Create pull request\".","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"(Image: Screenshot of the pull request information)","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"You pull request will appear in the list of pull requests in the TulipaEnergyModel.jl repository, where you can track the review process.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Sometimes reviewers request changes. After pushing any changes, the pull request will be automatically updated. Do not forget to re-request a review.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Once your reviewer approves the pull request, you need to merge it with the main branch using \"Squash and Merge\". You can also delete the branch that originated the pull request by clicking the button that appears after the merge. For branches that were pushed to the main repo, it is recommended that you do so.","category":"page"},{"location":"91-developer/#Building-the-Documentation-Locally","page":"Developer Documentation","title":"Building the Documentation Locally","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Following the latest suggestions, we recommend using LiveServer to build the documentation.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Note: Ensure you have the package Revise installed in your global environment before running servedocs.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Here is how you do it:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Run julia --project=docs in the package root to open Julia in the environment of the docs.\nIf this is the first time building the docs\nPress ] to enter pkg mode\nRun pkg> dev . to use the development version of your package\nPress backspace to leave pkg mode\nRun julia> using LiveServer\nRun julia> servedocs(launch_browser=true)","category":"page"},{"location":"91-developer/#Performance-Considerations","page":"Developer Documentation","title":"Performance Considerations","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"If you updated something that might impact the performance of the package, you can run the Benchmark.yml workflow from your pull request. To do that, add the tag benchmark in the pull request. This will trigger the workflow and post the results as a comment in you pull request.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Warning: This requires that your branch was pushed to the main repo. If you have created a pull request from a fork, the Benchmark.yml workflow does not work. Instead, close your pull request, push your branch to the main repo, and open a new pull request.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"If you want to manually run the benchmarks, you can do the following:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Navigate to the benchmark folder\nRun julia --project=.\nEnter pkg mode by pressing ]\nRun dev .. to add the development version of TulipaEnergyModel\nNow run\ninclude(\"benchmarks.jl\")\ntune!(SUITE)\nresults = run(SUITE, verbose=true)","category":"page"},{"location":"91-developer/#Profiling","page":"Developer Documentation","title":"Profiling","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"To profile the code in a more manual way, here are some tips:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Wrap your code into functions.\nCall the function once to precompile it. This must be done after every change to the function.\nPrefix the function call with @time. This is the most basic timing, part of Julia.\nPrefix the function call with @btime. This is part of the BenchmarkTools package, which you might need to install. @btime will evaluate the function a few times to give a better estimate.\nPrefix the function call with @benchmark. Also part of BenchmarkTools. This will produce a nice histogram of the times and give more information. @btime and @benchmark do the same thing in the background.\nCall @profview. This needs to be done in VSCode, or using the ProfileView package. This will create a flame graph, where each function call is a block. The size of the block is proportional to the aggregate time it takes to run. The blocks below a block are functions called inside the function above.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"See the file <benchmark/profiling.jl> for an example of profiling code.","category":"page"},{"location":"91-developer/#Procedure-for-Releasing-a-New-Version-(Julia-Registry)","page":"Developer Documentation","title":"Procedure for Releasing a New Version (Julia Registry)","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"When publishing a new version of the model to the Julia Registry, follow this procedure:","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Note: To be able to register, you need to be a member of the organisation TulipaEnergy and have your visibility set to public:<br> > (Image: Screenshot of public members of TulipaEnergy on GitHub)","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Click on the Project.toml file on GitHub.\nEdit the file and change the version number according to semantic versioning: Major.Minor.Patch<br> (Image: Screenshot of editing Project.toml on GitHub)\nCommit the changes in a new branch and open a pull request. Change the commit message according to the version number.<br> (Image: Screenshot of PR with commit message \"Release 0.6.1\")\nCreate the pull request and squash & merge it after the review and testing process. Delete the branch after the squash and merge.<br> (Image: Screenshot of full PR template on GitHub)\nGo to the main page of repo and click in the commit.<br> (Image: Screenshot of how to access commit on GitHub)\nAdd the following comment to the commit: @JuliaRegistrator register<br> (Image: Screenshot of calling JuliaRegistrator in commit comments)\nThe bot should start the registration process.<br> (Image: Screenshot of JuliaRegistrator bot message)\nAfter approval, the bot will take care of the PR at the Julia Registry and automatically create the release for the new version.<br> (Image: Screenshot of new version on registry)\nThank you for helping make frequent releases!","category":"page"},{"location":"91-developer/#Adding-a-Package-to-the-TulipaEnergy-Organisation","page":"Developer Documentation","title":"Adding a Package to the TulipaEnergy Organisation","text":"","category":"section"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"To get started creating a new (Julia) package that will live in the TulipaEnergy organisation and interact with TulipaEnergyModel, please start by using BestieTemplate.jl, and follow the steps in their Full guide for a new package.","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"This will set up the majority of automation and workflows we use and make your repo consistent with the others!","category":"page"},{"location":"91-developer/","page":"Developer Documentation","title":"Developer Documentation","text":"Note: TulipaEnergyModel.jl is the core repo of the organisation. The Discussions are focused there and in some cases the documentation of other packages should forward to the TulipaEnergyModel docs to avoid duplicate or scattered information.","category":"page"},{"location":"50-schemas/#schemas","page":"Model Parameters","title":"Model Parameters","text":"","category":"section"},{"location":"50-schemas/","page":"Model Parameters","title":"Model Parameters","text":"The optimization model parameters with the input data must follow the schema below for each table. To create these tables we currently use CSV files that follow this same schema and then convert them into tables using TulipaIO, as shown in the basic example of the Tutorials section.","category":"page"},{"location":"50-schemas/","page":"Model Parameters","title":"Model Parameters","text":"The schemas can be accessed at any time after loading the package by typing TulipaEnergyModel.schema_per_table_name in the Julia console. Here is the complete list of model parameters in the schemas per table (or CSV file):","category":"page"},{"location":"50-schemas/","page":"Model Parameters","title":"Model Parameters","text":"info: Optional tables/files and their defaults\nThe following tables/files are allowed to be missing: \"assets_rep_periods_partitions\", \"assets_timeframe_partitions\", \"assets_timeframe_profiles\", \"flows_rep_periods_partitions\", \"group_asset\", \"profiles_timeframe\".For the partitions tables/files, the default value are specification = uniform and partition = 1 for each asset/flow and year\nFor the profiles tables/files, the default value is a flat profile of value 1.0 p.u.\nIf no group table/file is available there will be no group constraints in the model","category":"page"},{"location":"50-schemas/","page":"Model Parameters","title":"Model Parameters","text":"using Markdown, TulipaEnergyModel\n\nMarkdown.parse(\n    join([\"- **`$filename`**\\n\" *\n        join(\n            [\"  - `$f: $t`\" for (f, t) in schema],\n            \"\\n\",\n        ) for (filename, schema) in TulipaEnergyModel.schema_per_table_name\n    ] |> sort, \"\\n\")\n)","category":"page"},{"location":"20-tutorials/#tutorials","page":"Tutorials","title":"Tutorials","text":"","category":"section"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"Here are some tutorials on how to use Tulipa.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"Pages = [\"20-tutorials.md\"]\nDepth = 3","category":"page"},{"location":"20-tutorials/#basic-example","page":"Tutorials","title":"Basic example","text":"","category":"section"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"For our first example, let's use a tiny existing dataset. Inside the code for this package, you can find the folder test/inputs/Tiny, which includes all the files necessary to create a model and solve it.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"The files inside the \"Tiny\" folder define the assets and flows data, their profiles, and their time resolution, as well as define the representative periods and which periods in the full problem formulation they represent.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"For more details about these files, see Input.","category":"page"},{"location":"20-tutorials/#Run-scenario","page":"Tutorials","title":"Run scenario","text":"","category":"section"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"To read all data from the Tiny folder, perform all necessary steps to create a model, and solve the model, run the following in a Julia terminal:","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"using DuckDB, TulipaIO, TulipaEnergyModel\n\ninput_dir = \"../../test/inputs/Tiny\" # hide\n# input_dir should be the path to Tiny as a string (something like \"test/inputs/Tiny\")\n# TulipaEnergyModel.schema_per_table_name contains the schema with columns and types the file must have\nconnection = DBInterface.connect(DuckDB.DB)\nread_csv_folder(connection, input_dir; schemas = TulipaEnergyModel.schema_per_table_name)\nenergy_problem = run_scenario(connection)","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"The energy_problem variable is of type EnergyProblem. For more details, see the documentation for that type or the section Structures.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"That's all it takes to run a scenario! To learn about the data required to run your own scenario, see the Input section of How to Use.","category":"page"},{"location":"20-tutorials/#Manually-running-each-step","page":"Tutorials","title":"Manually running each step","text":"","category":"section"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"If we need more control, we can create the energy problem first, then the optimization model inside it, and finally ask for it to be solved.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"using DuckDB, TulipaIO, TulipaEnergyModel\n\ninput_dir = \"../../test/inputs/Tiny\" # hide\n# input_dir should be the path to Tiny as a string (something like \"test/inputs/Tiny\")\nconnection = DBInterface.connect(DuckDB.DB)\nread_csv_folder(connection, input_dir; schemas = TulipaEnergyModel.schema_per_table_name)\nenergy_problem = EnergyProblem(connection)","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"The energy problem does not have a model yet:","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"energy_problem.model === nothing","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"To create the internal model, we call the function create_model!.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"create_model!(energy_problem)\nenergy_problem.model","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"The model has not been solved yet, which can be verified through the solved flag inside the energy problem:","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"energy_problem.solved","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"Finally, we can solve the model:","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"solve_model!(energy_problem)","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"The compute the solution and save it in the DuckDB connection, we can use","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"save_solution!(energy_problem)","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"The solutions will be saved in the variable and constraints tables. To save the solution to CSV files, you can use export_solution_to_csv_files","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"mkdir(\"output_folder\")\nexport_solution_to_csv_files(\"output_folder\", energy_problem)","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"The objective value and the termination status are also included in the energy problem:","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"energy_problem.objective_value, energy_problem.termination_status","category":"page"},{"location":"20-tutorials/#Manually-creating-all-structures-without-EnergyProblem","page":"Tutorials","title":"Manually creating all structures without EnergyProblem","text":"","category":"section"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"The EnergyProblem structure holds various internal structures, including the JuMP model and the DuckDB connection. There is currently no reason to manually create and maintain these structures yourself, so we recommend that you use the previous sections instead.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"To avoid having to update this documentation whenever we make changes to the internals of TulipaEnergyModel before the v1.0.0 release, we will keep this section empty until then.","category":"page"},{"location":"20-tutorials/#Change-optimizer-and-specify-parameters","page":"Tutorials","title":"Change optimizer and specify parameters","text":"","category":"section"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"By default, the model is solved using the HiGHS optimizer (or solver). To change this, we can give the functions run_scenario or solve_model! a different optimizer.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"warning: Warning\nHiGHS is the only open source solver that we recommend. GLPK and Cbc are not (fully) tested for Tulipa.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"For instance, let's run the Tiny example using the GLPK optimizer:","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"using DuckDB, TulipaIO, TulipaEnergyModel, GLPK\n\ninput_dir = \"../../test/inputs/Tiny\" # hide\n# input_dir should be the path to Tiny as a string (something like \"test/inputs/Tiny\")\nconnection = DBInterface.connect(DuckDB.DB)\nread_csv_folder(connection, input_dir; schemas = TulipaEnergyModel.schema_per_table_name)\nenergy_problem = run_scenario(connection, optimizer = GLPK.Optimizer)","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"or","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"using GLPK\n\nsolution = solve_model!(energy_problem, GLPK.Optimizer)","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"info: Info\nNotice that, in any of these cases, we need to explicitly add the GLPK package ourselves and add using GLPK before using GLPK.Optimizer.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"In any of these cases, default parameters for the GLPK optimizer are used, which you can query using default_parameters. You can pass a dictionary using the keyword argument parameters to change the defaults. For instance, in the example below, we change the maximum allowed runtime for GLPK to be 1 seconds, which will most likely cause it to fail to converge in time.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"using DuckDB, TulipaIO, TulipaEnergyModel, GLPK\n\ninput_dir = \"../../test/inputs/Tiny\" # hide\nparameters = Dict(\"tm_lim\" => 1)\nconnection = DBInterface.connect(DuckDB.DB)\nread_csv_folder(connection, input_dir; schemas = TulipaEnergyModel.schema_per_table_name)\nenergy_problem = run_scenario(connection, optimizer = GLPK.Optimizer, parameters = parameters)\nenergy_problem.termination_status","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"For the complete list of parameters, check your chosen optimizer.","category":"page"},{"location":"20-tutorials/","page":"Tutorials","title":"Tutorials","text":"These parameters can also be passed via a file. See the read_parameters_from_file function for more details.","category":"page"},{"location":"95-reference/#reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Pages = [\"95-reference.md\"]","category":"page"},{"location":"95-reference/","page":"Reference","title":"Reference","text":"Modules = [TulipaEnergyModel]","category":"page"},{"location":"95-reference/#TulipaEnergyModel.EnergyProblem","page":"Reference","title":"TulipaEnergyModel.EnergyProblem","text":"EnergyProblem\n\nStructure to hold all parts of an energy problem. It is a wrapper around various other relevant structures. It hides the complexity behind the energy problem, making the usage more friendly, although more verbose.\n\nFields\n\ndb_connection: A DuckDB connection to the input tables in the model.\nvariables: A dictionary of TulipaVariables containing the variables of the model.\nexpressions: A dictionary of TulipaExpressions containing the expressions of the model attached to tables.\nconstraints: A dictionary of TulipaConstraints containing the constraints of the model.\nprofiles: Holds the profiles per rep_period or over_clustered_year in dictionary format. See ProfileLookup.\nmodel_parameters: A ModelParameters structure to store all the parameters that are exclusive of the model.\nmodel: A JuMP.Model object representing the optimization model.\nsolved: A boolean indicating whether the model has been solved or not.\nobjective_value: The objective value of the solved problem (Float64).\ntermination_status: The termination status of the optimization model.\n\nConstructor\n\nEnergyProblem(connection): Constructs a new EnergyProblem object with the given connection.\n\nThe constraints_partitions field is computed from the representative_periods, and the other fields are initialized with default values.\n\nSee the basic example tutorial to see how these can be used.\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#TulipaEnergyModel.ModelParameters","page":"Reference","title":"TulipaEnergyModel.ModelParameters","text":"ModelParameters(;key = value, ...)\nModelParameters(path; ...)\nModelParameters(connection; ...)\nModelParameters(connection, path; ...)\n\nStructure to hold the model parameters. Some values are defined by default and some required explicit definition.\n\nIf path is passed, it is expected to be a string pointing to a TOML file with a key = value list of parameters. Explicit keyword arguments take precedence.\n\nIf connection is passed, the default discount_year is set to the minimum of all milestone years. In other words, we check for the table year_data for the column year where the column is_milestone is true. Explicit keyword arguments take precedence.\n\nIf both are passed, then path has preference. Explicit keyword arguments take precedence.\n\nParameters\n\ndiscount_rate::Float64 = 0.0: The model discount rate.\ndiscount_year::Int: The model discount year.\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#TulipaEnergyModel.ProfileLookup","page":"Reference","title":"TulipaEnergyModel.ProfileLookup","text":"Structure to hold the dictionaries of profiles.\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#TulipaEnergyModel.TulipaConstraint","page":"Reference","title":"TulipaEnergyModel.TulipaConstraint","text":"Structure to hold the JuMP constraints for the TulipaEnergyModel\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#TulipaEnergyModel.TulipaExpression","page":"Reference","title":"TulipaEnergyModel.TulipaExpression","text":"Structure to hold some JuMP expressions that are not attached to constraints but are attached to a table.\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#TulipaEnergyModel.TulipaVariable","page":"Reference","title":"TulipaEnergyModel.TulipaVariable","text":"Structure to hold the JuMP variables for the TulipaEnergyModel\n\n\n\n\n\n","category":"type"},{"location":"95-reference/#TulipaEnergyModel._profile_aggregate-Tuple{Any, Tuple, Any, Any, Any}","page":"Reference","title":"TulipaEnergyModel._profile_aggregate","text":"_profile_aggregate(profiles, tuple_key, time_block, agg_functions, default_value)\n\nAggregates the profiles[tuple_key] over the time_block using the agg_function function. If the profile does not exist, uses default_value instead of each profile value.\n\nprofiles should be a dictionary of profiles, and tuple_key should be either (profile_name, year, rep_period) for the profiles of representative periods or (profile_name, year) for the profiles over clustered years.\n\nIf profiles[tuple_key] exists, then this function computes the aggregation of V = profiles[tuple_key] over the range time_block using the aggregator agg_function, i.e., agg_function(V[time_block]). If it does not exist, then V[time_block] is substituted by a vector of the corresponding size and default_value.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_capacity_constraints!-NTuple{5, Any}","page":"Reference","title":"TulipaEnergyModel.add_capacity_constraints!","text":"add_capacity_constraints!(connection, model, expressions, constraints, profiles)\n\nAdds the capacity constraints for all asset types to the model\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_consumer_constraints!-NTuple{4, Any}","page":"Reference","title":"TulipaEnergyModel.add_consumer_constraints!","text":"add_consumer_constraints!(connection, model, constraints, profiles)\n\nAdds the consumer asset constraints to the model.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_conversion_constraints!-Tuple{Any, Any}","page":"Reference","title":"TulipaEnergyModel.add_conversion_constraints!","text":"addconversionconstraints!(model,                             dataframes,                             Acv,                             incomingflowlowestresolution,                             outgoingflowlowestresolution,                             )\n\nAdds the conversion asset constraints to the model.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_energy_constraints!-NTuple{4, Any}","page":"Reference","title":"TulipaEnergyModel.add_energy_constraints!","text":"add_energy_constraints!(connection, model, constraints, profiles)\n\nAdds the energy constraints for assets within the period blocks of the timeframe (inter-temporal) to the model.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_expression_is_charging_terms_rep_period_constraints!-Tuple{TulipaConstraint, TulipaVariable, Any}","page":"Reference","title":"TulipaEnergyModel.add_expression_is_charging_terms_rep_period_constraints!","text":"add_expression_is_charging_terms_rep_period_constraints!(\n    cons,\n    is_charging,\n    workspace,\n)\n\nComputes the is_charging expressions per row of cons for the constraints that are within (intra) the representative periods.\n\nThis function is only used internally in the model.\n\nThis strategy is based on the replies in this discourse thread:\n\nhttps://discourse.julialang.org/t/help-improving-the-speed-of-a-dataframes-operation/107615/23\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_expression_terms_over_clustered_year_constraints!-Tuple{Any, TulipaConstraint, TulipaVariable}","page":"Reference","title":"TulipaEnergyModel.add_expression_terms_over_clustered_year_constraints!","text":"add_expression_terms_over_clustered_year_constraints!(\n    connection,\n    cons,\n    flow,\n    profiles;\n    is_storage_level = false,\n)\n\nComputes the incoming and outgoing expressions per row of df_inter for the constraints that are between (inter) the representative periods.\n\nThis function is only used internally in the model.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_expression_terms_rep_period_constraints!-Tuple{Any, TulipaConstraint, TulipaVariable}","page":"Reference","title":"TulipaEnergyModel.add_expression_terms_rep_period_constraints!","text":"add_expression_terms_rep_period_constraints!(\n    connection,\n    cons,\n    flow;\n    use_highest_resolution = true,\n    multiply_by_duration = true,\n    add_min_outgoing_flow_duration = false,\n)\n\nComputes the incoming and outgoing expressions per row of cons for the constraints that are within (intra) the representative periods.\n\nThis function is only used internally in the model.\n\nThis strategy is based on the replies in this discourse thread:\n\nhttps://discourse.julialang.org/t/help-improving-the-speed-of-a-dataframes-operation/107615/23\n\nImplementation\n\nThis expression computation uses a workspace to store all variables defined for each timestep. The idea of this algorithm is to append all variables defined at time timestep in workspace[timestep] and then aggregate then for the constraint time block.\n\nThe algorithm works like this:\n\nLoop over each group of (asset, year, rep_period)\n\n1.1. Loop over each variable in the group: (varidx, vartimeblockstart, vartimeblockend) 1.1.1. Loop over each timestep in vartimeblockstart:vartimeblockend 1.1.1.1. Compute the coefficient of the variable based on the repperiod   resolution and the variable efficiency 1.1.1.2. Store (varidx, coefficient) in workspace[timestep] 1.2. Loop over each constraint in the group: (considx, constimeblockstart, constimeblockend) 1.2.1. Aggregate all variables in workspace[timestep] for timestep in the time   block to create a list of variable indices and their coefficients [(var_idx1, coef1), ...] 1.2.2. Compute the expression using the variable container, the indices and coefficients\n\nNotes:\n\nOn step 1.2.1, the aggregation can be either by uniqueness of not, i.e., if the variable happens in more that one workspace[timestep], should we add up the coefficients or not. This is defined by the keyword\n\nmultiply_by_duration\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_expression_units_on_terms_rep_period_constraints!-Tuple{TulipaConstraint, TulipaVariable, Any}","page":"Reference","title":"TulipaEnergyModel.add_expression_units_on_terms_rep_period_constraints!","text":"add_expression_units_on_terms_rep_period_constraints!(\n    cons,\n    units_on,\n    workspace,\n)\n\nComputes the units_on expressions per row of cons for the constraints that are within (intra) the representative periods.\n\nThis function is only used internally in the model.\n\nThis strategy is based on the replies in this discourse thread:\n\nhttps://discourse.julialang.org/t/help-improving-the-speed-of-a-dataframes-operation/107615/23\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_flow_variables!-Tuple{Any, Any, Any}","page":"Reference","title":"TulipaEnergyModel.add_flow_variables!","text":"add_flow_variables!(connection, model, variables)\n\nAdds flow variables to the optimization model based on data from the variables. The flow variables are created using the @variable macro for each row in the :flows dataframe.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_group_constraints!-NTuple{4, Any}","page":"Reference","title":"TulipaEnergyModel.add_group_constraints!","text":"add_group_constraints!(connection, model, ...)\n\nAdds group constraints for assets that share a common limits or bounds\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_hub_constraints!-Tuple{Any, Any}","page":"Reference","title":"TulipaEnergyModel.add_hub_constraints!","text":"add_hub_constraints!(model, constraints)\n\nAdds the hub asset constraints to the model.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_investment_variables!-Tuple{Any, Any}","page":"Reference","title":"TulipaEnergyModel.add_investment_variables!","text":"add_investment_variables!(model, variables)\n\nAdds investment, decommission, and energy-related variables to the optimization model, and sets integer constraints on selected variables based on the input data.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_ramping_constraints!-NTuple{6, Any}","page":"Reference","title":"TulipaEnergyModel.add_ramping_constraints!","text":"add_ramping_and_unit_commitment_constraints!(\n    connection,\n    model,\n    variables,\n    expressions,\n    constraints,\n    profiles\n)\n\nAdds the ramping constraints for producer and conversion assets where ramping = true in assets_data\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_storage_constraints!-NTuple{6, Any}","page":"Reference","title":"TulipaEnergyModel.add_storage_constraints!","text":"add_storage_constraints!(connection, model, variables, expressions, constraints, profiles)\n\nAdds the storage asset constraints to the model.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_storage_variables!-Tuple{Any, Any, Any}","page":"Reference","title":"TulipaEnergyModel.add_storage_variables!","text":"add_storage_variables!(connection, model, variables)\n\nAdds storage-related variables to the optimization model, including storage levels for both intra-representative periods and inter-representative periods, as well as charging state variables. The function also optionally sets binary constraints for certain charging variables based on storage methods.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_transport_constraints!-NTuple{6, Any}","page":"Reference","title":"TulipaEnergyModel.add_transport_constraints!","text":"add_transport_constraints!(connection, model, variables, expressions, constraints, profiles)\n\nAdds the transport flow constraints to the model.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.add_unit_commitment_variables!-Tuple{Any, Any}","page":"Reference","title":"TulipaEnergyModel.add_unit_commitment_variables!","text":"add_unit_commitment_variables!(model, variables)\n\nAdds unit commitment variables to the optimization model based on the :units_on indices. Additionally, variables are constrained to be integers based on the unit_commitment_integer property.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.attach_coefficient!-Tuple{TulipaConstraint, Symbol, Any}","page":"Reference","title":"TulipaEnergyModel.attach_coefficient!","text":"attach_coefficient!(cons, name, container)\n\nAttach a coefficient named name stored in container. This checks that the container length matches the stored indices number of rows.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.attach_constraint!-Tuple{JuMP.Model, TulipaConstraint, Symbol, Vector{<:JuMP.ConstraintRef}}","page":"Reference","title":"TulipaEnergyModel.attach_constraint!","text":"attach_constraint!(model, cons, name, container)\n\nAttach a constraint named name stored in container, and set model[name] = container. This checks that the container length matches the stored indices number of rows.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.attach_expression!-Tuple{Union{TulipaConstraint, TulipaExpression, TulipaVariable}, Symbol, Vector{JuMP.AffExpr}}","page":"Reference","title":"TulipaEnergyModel.attach_expression!","text":"attach_expression!(cons_or_expr, name, container)\nattach_expression!(model, cons_or_expr, name, container)\n\nAttach a expression named name stored in container, and optionally set model[name] = container. This checks that the container length matches the stored indices number of rows.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.compute_dual_variables!-Tuple{Any}","page":"Reference","title":"TulipaEnergyModel.compute_dual_variables!","text":"compute_dual_variables!(model)\n\nCompute the dual variables for the given model.\n\nIf the model does not have dual variables, this function fixes the discrete variables, optimizes the model, and then computes the dual variables.\n\nArguments\n\nmodel: The model for which to compute the dual variables.\n\nReturns\n\nA named tuple containing the dual variables of selected constraints.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.create_internal_structures!-Tuple{Any}","page":"Reference","title":"TulipaEnergyModel.create_internal_structures!","text":"create_internal_structures!(connection)\n\nCreates internal tables.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.create_model!-Tuple{Any}","page":"Reference","title":"TulipaEnergyModel.create_model!","text":"create_model!(energy_problem; kwargs...)\n\nCreate the internal model of an TulipaEnergyModel.EnergyProblem. Any keyword argument will be passed to the underlyting create_model.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.create_model-NTuple{6, Any}","page":"Reference","title":"TulipaEnergyModel.create_model","text":"model = create_model(\n    connection,\n    variables,\n    expressions,\n    constraints,\n    profiles,\n    model_parameters;\n    write_lp_file = false,\n    enable_names = true\n)\n\nCreate the energy model manually. We recommend using create_model! instead.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.default_parameters-Tuple{Any}","page":"Reference","title":"TulipaEnergyModel.default_parameters","text":"default_parameters(Val(optimizer_name_symbol))\ndefault_parameters(optimizer)\ndefault_parameters(optimizer_name_symbol)\ndefault_parameters(optimizer_name_string)\n\nReturns the default parameters for a given JuMP optimizer. Falls back to Dict() for undefined solvers.\n\nArguments\n\nThere are four ways to use this function:\n\nVal(optimizer_name_symbol): This uses type dispatch with the special Val type. Pass the solver name as a Symbol (e.g., Val(:HiGHS)).\noptimizer: The JuMP optimizer type (e.g., HiGHS.Optimizer).\noptimizer_name_symbol or optimizer_name_string: Pass the name in Symbol or String format and it will be converted to Val.\n\nUsing Val is necessary for the dispatch. All other cases will convert the argument and call the Val version, which might lead to type instability.\n\nExamples\n\nusing HiGHS\ndefault_parameters(HiGHS.Optimizer)\n\n# output\n\nDict{String, Any} with 1 entry:\n  \"output_flag\" => false\n\nAnother case\n\ndefault_parameters(Val(:Cbc))\n\n# output\n\nDict{String, Any} with 1 entry:\n  \"logLevel\" => 0\n\ndefault_parameters(:Cbc) == default_parameters(\"Cbc\") == default_parameters(Val(:Cbc))\n\n# output\n\ntrue\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.export_solution_to_csv_files-NTuple{4, Any}","page":"Reference","title":"TulipaEnergyModel.export_solution_to_csv_files","text":"export_solution_to_csv_files(output_file, connection, variables, constraints)\n\nSaves the solution in CSV files inside output_folder. Notice that this assumes that the solution has been computed by save_solution!.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.export_solution_to_csv_files-Tuple{Any, EnergyProblem}","page":"Reference","title":"TulipaEnergyModel.export_solution_to_csv_files","text":"export_solution_to_csv_files(output_folder, energy_problem)\n\nSaves the solution from energy_problem in CSV files inside output_file. Notice that this assumes that the solution has been computed by save_solution!.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.read_parameters_from_file-Tuple{Any}","page":"Reference","title":"TulipaEnergyModel.read_parameters_from_file","text":"read_parameters_from_file(filepath)\n\nParse the parameters from a file into a dictionary. The keys and values are NOT checked to be valid parameters for any specific solvers.\n\nThe file should contain a list of lines of the following type:\n\nkey = value\n\nThe file is parsed as TOML, which is intuitive. See the example below.\n\nExample\n\n# Creating file\nfilepath, io = mktemp()\nprintln(io,\n  \"\"\"\n    true_or_false = true\n    integer_number = 5\n    real_number1 = 3.14\n    big_number = 6.66E06\n    small_number = 1e-8\n    string = \"something\"\n  \"\"\"\n)\nclose(io)\n# Reading\nread_parameters_from_file(filepath)\n\n# output\n\nDict{String, Any} with 6 entries:\n  \"string\"         => \"something\"\n  \"integer_number\" => 5\n  \"small_number\"   => 1.0e-8\n  \"true_or_false\"  => true\n  \"real_number1\"   => 3.14\n  \"big_number\"     => 6.66e6\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.run_scenario-Tuple{Any}","page":"Reference","title":"TulipaEnergyModel.run_scenario","text":"energy_problem = run_scenario(connection; optimizer, parameters, write_lp_file, log_file, show_log)\n\nRun the scenario in the given connection and return the energy problem.\n\nThe optimizer and parameters keyword arguments can be used to change the optimizer (the default is HiGHS) and its parameters. The variables are passed to the solve_model function.\n\nSet write_lp_file = true to export the problem that is sent to the solver to a file for viewing. Set enable_names = false to turn off variable and constraint names (faster model creation). Set show_log = false to silence printing the log while running. Specify a log_file name to export the log to a file.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.save_solution!-NTuple{4, Any}","page":"Reference","title":"TulipaEnergyModel.save_solution!","text":"save_solution!(connection, model, variables, constraints; compute_duals = true)\n\nSaves the primal and dual variables values, in the following way:\n\nFor each variable in variables, get the solution value and save it in a\n\ncolumn named solution in the corresponding dataset.\n\nFor each constraint in constraints, get the dual of each attached\n\nconstraint listed in constraint.constraint_names and save it to the dictionary constraint.duals with the key given by the name.\n\nNotice that the duals are only computed if compute_duals is true.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.save_solution!-Tuple{EnergyProblem}","page":"Reference","title":"TulipaEnergyModel.save_solution!","text":"save_solution!(energy_problem; compute_duals = true)\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.solve_model","page":"Reference","title":"TulipaEnergyModel.solve_model","text":"solve_model(model[, optimizer; parameters])\n\nSolve the JuMP model. The optimizer argument should be an MILP solver from the JuMP list of supported solvers. By default we use HiGHS.\n\nThe keyword argument parameters should be passed as a list of key => value pairs. These can be created manually, obtained using default_parameters, or read from a file using read_parameters_from_file.\n\nExamples\n\nparameters = Dict{String,Any}(\"presolve\" => \"on\", \"time_limit\" => 60.0, \"output_flag\" => true)\nsolve_model(model, HiGHS.Optimizer; parameters = parameters)\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#TulipaEnergyModel.solve_model!","page":"Reference","title":"TulipaEnergyModel.solve_model!","text":"solve_model!(energy_problem[, optimizer; parameters, save_solution = true])\n\nSolve the internal model of an energy_problem. If save_solution, then the solution and dual variables are computed and saved by save_solution!.\n\n\n\n\n\n","category":"function"},{"location":"95-reference/#TulipaEnergyModel.tmp_create_partition_tables-Tuple{Any}","page":"Reference","title":"TulipaEnergyModel.tmp_create_partition_tables","text":"tmp_create_partition_tables(connection)\n\nCreate the unrolled partition tables using only tables.\n\nThe table explicit_assets_rep_periods_partitions is the explicit version of assets_rep_periods_partitions, i.e., it adds the rows not defined in that table by setting the specification to 'uniform' and the partition to '1'.\n\nThe table asset_time_resolution is the unrolled version of the table above, i.e., it takes the specification and partition and expands into a series of time blocks. The columns time_block_start and time_block_end replace the specification and partition columns.\n\nSimilarly, flow tables are created as well.\n\n\n\n\n\n","category":"method"},{"location":"95-reference/#TulipaEnergyModel.tmp_example_of_flow_expression_problem-Tuple{}","page":"Reference","title":"TulipaEnergyModel.tmp_example_of_flow_expression_problem","text":"connection, ep = tmp_example_of_flow_expression_problem()\n\n\n\n\n\n","category":"method"},{"location":"90-contributing/#contributing","page":"Contributing Guidelines","title":"Contributing Guidelines","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing Guidelines","title":"Contributing Guidelines","text":"Great that you want to contribute to the development of Tulipa! Please read these guidelines and our Developer Documentation to get you started.","category":"page"},{"location":"90-contributing/#GitHub-Rules-of-Engagement","page":"Contributing Guidelines","title":"GitHub Rules of Engagement","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing Guidelines","title":"Contributing Guidelines","text":"If you want to discuss something that isn't immediately actionable, post under Discussions. Convert it to an issue once it's actionable.\nAll PR's should have an associated issue (unless it's a very minor fix).\nAll issues should have 1 Type and 1+ Zone labels (unless Type: epic).\nAssign yourself to issues you want to address. Consider if you will be able to work on them in the near future (this week) — if not, leave them available for someone else.\nSet the issue Status to \"In Progress\" when you have started working on it.\nWhen finalizing a pull request, set the Status to \"Ready for Review.\" If someone specific needs to review it, assign them as the reviewer (otherwise anyone can review).\nIssues addressed by merged PRs will automatically move to Done.\nIf you want to discuss an issue at the next group meeting (or just get some attention), mark it with the \"question\" label.\nIssues without updates for 60 days (and PRs without updates in 30 days) will be labelled as \"stale\" and filtered out of view. There is a Stale project board to view and revive these.","category":"page"},{"location":"90-contributing/#Contributing-Workflow","page":"Contributing Guidelines","title":"Contributing Workflow","text":"","category":"section"},{"location":"90-contributing/","page":"Contributing Guidelines","title":"Contributing Guidelines","text":"Fork → Branch → Code → Push → Pull → Squash & Merge","category":"page"},{"location":"90-contributing/","page":"Contributing Guidelines","title":"Contributing Guidelines","text":"Fork the repository\nCreate a new branch (in your fork)\nDo fantastic coding\nPush to your fork\nCreate a pull request from your fork to the main repository\n(After review) Squash and merge","category":"page"},{"location":"90-contributing/","page":"Contributing Guidelines","title":"Contributing Guidelines","text":"For a step-by-step guide to these steps, see our Developer Documentation.","category":"page"},{"location":"90-contributing/","page":"Contributing Guidelines","title":"Contributing Guidelines","text":"We use this workflow in our quest to achieve the Utopic Git History.","category":"page"},{"location":"40-formulation/#formulation","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"This section shows the mathematical formulation of TulipaEnergyModel.jl, assuming that the temporal definition of timesteps is the same for all the elements in the model (e.g., hourly). The concepts section shows how the model handles the flexible temporal resolution of assets and flows in the model.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Pages = [\"40-formulation.md\"]\nDepth = 3","category":"page"},{"location":"40-formulation/#math-sets","page":"Mathematical Formulation","title":"Sets","text":"","category":"section"},{"location":"40-formulation/#Sets-for-Assets","page":"Mathematical Formulation","title":"Sets for Assets","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Description Elements Superset Notes\nmathcalA Energy assets a in mathcalA  The Energy asset types (i.e., consumer, producer, storage, hub, and conversion) are mutually exclusive\nmathcalA^textc Consumer energy assets  mathcalA^textc  subseteq mathcalA \nmathcalA^textp Producer energy assets  mathcalA^textp  subseteq mathcalA \nmathcalA^texts Storage energy assets  mathcalA^texts  subseteq mathcalA \nmathcalA^texth Hub energy assets (e.g., transshipment)  mathcalA^texth  subseteq mathcalA \nmathcalA^textcv Conversion energy assets  mathcalA^textcv subseteq mathcalA ","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"In addition, the following asset sets represent methods for incorporating additional variables and constraints in the model.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Description Elements Superset Notes\nmathcalA^texti_y Energy assets with investment method at year y  mathcalA^texti_y  subseteq mathcalA \nmathcalA^textdecom simple Energy assets with simple investment method at year y  mathcalA^textdecom simple  subseteq mathcalA \nmathcalA^textdecom compact Energy assets with compact investment method at year y  mathcalA^textdecom compact  subseteq mathcalA \nmathcalA^textss_y Energy assets with seasonal method at year y  mathcalA^textss_y subseteq mathcalA This set contains assets that use the seasonal method method. Please visit the how-to sections for seasonal storage and maximum/minimum outgoing energy limit to learn how to set up this feature.\nmathcalA^textse_y Storage energy assets with energy method at year y  mathcalA^textse_y subseteq mathcalA^texts This set contains storage assets that use investment energy method. Please visit the how-to section to learn how to set up this feature.\nmathcalA^textsb_y Storage energy assets with binary method at year y  mathcalA^textsb_y subseteq mathcalA^texts setminus mathcalA^textss_y This set contains storage assets that use an extra binary variable to avoid charging and discharging simultaneously. Please visit the how-to section to learn how to set up this feature.\nmathcalA^textmax e_y Energy assets with maximum outgoing energy method at year y  mathcalA^textmax e_y subseteq mathcalA This set contains assets that use the maximum outgoing energy method. Please visit the how-to section to learn how to set up this feature.\nmathcalA^textmin e_y Energy assets with minimum outgoing energy method at year y  mathcalA^textmin e _ysubseteq mathcalA This set contains assets that use the minimum outgoing energy method. Please visit the how-to section to learn how to set up this feature.\nmathcalA^textuc_y Energy assets with unit commitment method at year y  mathcalA^textuc_y  subseteq mathcalA^textcv cup mathcalA^textp This set contains conversion and production assets that have a unit commitment method. Please visit the how-to section to learn how to set up this feature.\nmathcalA^textuc basic_y Energy assets with a basic unit commitment method at year y  mathcalA^textuc basic_y subseteq mathcalA^textuc_y This set contains the assets that have a basic unit commitment method. Please visit the how-to section to learn how to set up this feature.\nmathcalA^textramp_y Energy assets with ramping method at year y  mathcalA^textramp_y  subseteq mathcalA^textcv cup mathcalA^textp This set contains conversion and production assets that have a ramping method. Please visit the how-to section to learn how to set up this feature.","category":"page"},{"location":"40-formulation/#Sets-for-Flows","page":"Mathematical Formulation","title":"Sets for Flows","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Description Elements Superset Notes\nmathcalF Flow connections between two assets f in mathcalF  \nmathcalF^textin_ay Set of flows going into asset a at year y  mathcalF^textin_ay  subseteq mathcalF \nmathcalF^textout_ay Set of flows going out of asset a at year y  mathcalF^textout_ay subseteq mathcalF ","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"In addition, the following flow sets represent methods for incorporating additional variables and constraints in the model.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Description Elements Superset Notes\nmathcalF^textt Flow between two assets with a transport method  mathcalF^textt subseteq mathcalF \nmathcalF^textti_y Transport flow with investment method at year y  mathcalF^textti_y subseteq mathcalF^textt ","category":"page"},{"location":"40-formulation/#Sets-for-Temporal-Structures","page":"Mathematical Formulation","title":"Sets for Temporal Structures","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Description Elements Superset Notes\nmathcalY Milestone years y in mathcalY mathcalY subset mathbbN \nmathcalV All years v in mathcalV mathcalV subset mathbbN \nmathcalP_y Periods in the timeframe at year y p_y in mathcalP_y mathcalP_y subset mathbbN \nmathcalK_y Representative periods (rp) at year y k_y in mathcalK_y mathcalK_y subset mathbbN mathcalK_y does not have to be a subset of mathcalP_y\nmathcalB_k_y Timesteps blocks within a representative period k_y at year y b_k_y in mathcalB_k_y  mathcalB_k_y is a partition of timesteps in a representative period k_y","category":"page"},{"location":"40-formulation/#Sets-for-Groups","page":"Mathematical Formulation","title":"Sets for Groups","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Description Elements Superset Notes\nmathcalG^texta Groups of energy assets g in mathcalG^texta  ","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"In addition, the following subsets represent methods for incorporating additional constraints in the model.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Description Elements Superset Notes\nmathcalG^textai_y Group of assets that share min/max investment limit  mathcalG^textai_y subseteq mathcalG^texta This set contains assets that have a group investment limit. Please visit the how-to section to learn how to set up this feature.","category":"page"},{"location":"40-formulation/#math-parameters","page":"Mathematical Formulation","title":"Parameters","text":"","category":"section"},{"location":"40-formulation/#Parameters-for-Assets","page":"Mathematical Formulation","title":"Parameters for Assets","text":"","category":"section"},{"location":"40-formulation/#General-Parameters-for-Assets","page":"Mathematical Formulation","title":"General Parameters for Assets","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Domains of Indices Description Units\np^textinv cost_ay mathbbR_+ a in mathcalA, y in mathcalY Overnight cost of a unit of asset a at year y [kEUR/MW]\np^textannualized inv cost_ay mathbbR_+ a in mathcalA, y in mathcalY Annualized investment cost of a unit of asset a at year y [kEUR/MW/year]\np^textsalvage value_ay mathbbR_+ a in mathcalA, y in mathcalY Salvage value of a unit of asset a at year y [kEUR/MW]\np^textdiscounting factor asset inv cost_ay mathbbR_+ a in mathcalA, y in mathcalY Discounting factor for investment cost of a unit of asset a at year y [-]\np^textfixed cost_ay mathbbR_+ a in mathcalA, y in mathcalY Fixed cost of a unit of asset a at year y [kEUR/MW/year]\np^textinv limit_ay mathbbR_+ a in mathcalA, y in mathcalY Investment potential of asset a at year y [MW]\np^textcapacity_a mathbbR_+ a in mathcalA Capacity per unit of asset a [MW]\np^texttechnical lifetime_a mathbbZ_+ a in mathcalA Technical lifetime of asset a [year]\np^texteconomic lifetime_a mathbbZ_+ a in mathcalA Economic lifetime of asset a [year]\np^texttechnology-specific discount rate_a mathbbR_+ a in mathcalA Technology-specific discount rate of asset a [year]\np^textinit units_ay mathbbR_+ a in mathcalA, y in mathcalY Initial number of units of asset a available at year y [units]\np^textavailability profile_avk_yb_k_y mathbbR_+ a in mathcalA, v in mathcalV, k_y in mathcalK_y, b_k_y in mathcalB_k_y Availability profile of asset a invested in year v in the representative period k_y and timestep block b_k_y [p.u.]\np^textgroup_a mathcalG^texta a in mathcalA Group g to which the asset a belongs [-]","category":"page"},{"location":"40-formulation/#Extra-Parameters-for-Consumer-Assets","page":"Mathematical Formulation","title":"Extra Parameters for Consumer Assets","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Domains of Indices Description Units\np^textpeak demand_ay mathbbR_+ a in mathcalA^textc, y in mathcalY Peak demand of consumer asset a at year y [MW]\np^textdemand profile_ak_yb_k_y mathbbR_+ a in mathcalA^textc, , y in mathcalY, k_y in mathcalK_y, b_k_y in mathcalB_k_y Demand profile of consumer asset a in the representative period k_y and timestep block b_k_y [p.u.]","category":"page"},{"location":"40-formulation/#Extra-Parameters-for-Storage-Assets","page":"Mathematical Formulation","title":"Extra Parameters for Storage Assets","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Domains of Indices Description Units\np^textinit storage units_ay mathbbR_+ a in mathcalA^texts, y in mathcalY Initial storage units of storage asset a available at year y [units]\np^textinit storage level_ay mathbbR_+ a in mathcalA^texts, y in mathcalY Initial storage level of storage asset a at year y [MWh]\np^textinflows_ak_yb_k_y mathbbR_+ a in mathcalA^texts, k_y in mathcalK_y, b_k_y in mathcalB_k_y Inflows of storage asset a in the representative period k_y and timestep block b_k_y [MWh]\np^textinv cost energy_ay mathbbR_+ a in mathcalA^textse, y in mathcalY Overnight cost of a energy unit of asset a at year y [kEUR/MWh]\np^textfixed cost energy_ay mathbbR_+ a in mathcalA^textse, y in mathcalY Fixed cost of a energy unit of asset a at year y [kEUR/MWh/year]\np^textinv limit energy_ay mathbbR_+ a in mathcalA^textse, y in mathcalY Investment energy potential of asset a at year y [MWh]\np^textenergy capacity_a mathbbR_+ a in mathcalA^textse Energy capacity of a unit of investment of the asset a [MWh]\np^textenergy to power ratio_ay mathbbR_+ a in mathcalA^texts setminus mathcalA^textse_y Energy to power ratio of storage asset a at year y [h]\np^textmax intra level_ak_yb_k_y mathbbR_+ a in mathcalA^texts setminus mathcalA^textss_y, k_y in mathcalK_y, b_k_y in mathcalB_k_y Maximum intra-storage level profile of storage asset a in representative period k_y and timestep block b_k_y [p.u.]\np^textmin intra level_ak_yb_k_y mathbbR_+ a in mathcalA^texts setminus mathcalA^textss_y, k_y in mathcalK_y, b_k_y in mathcalB_k_y Minimum intra-storage level profile of storage asset a in representative period k_y and timestep block b_k_y [p.u.]\np^textmax inter level_ap_y mathbbR_+ a in mathcalA^textss_y, p_y in mathcalP_y Maximum inter-storage level profile of storage asset a in the period p_y of the timeframe [p.u.]\np^textmin inter level_ap_y mathbbR_+ a in mathcalA^textss_y, p_y in mathcalP_y Minimum inter-storage level profile of storage asset a in the period p_y of the timeframe [p.u.]","category":"page"},{"location":"40-formulation/#Extra-Parameters-for-Energy-Constraints","page":"Mathematical Formulation","title":"Extra Parameters for Energy Constraints","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Domains of Indices Description Units\np^textmin inter profile_ap_y mathbbR_+ a in mathcalA^textmin e_y, p_y in mathcalP_y Minimum outgoing inter-temporal energy profile of asset a in the period p_y of the timeframe [p.u.]\np^textmax inter profile_ap_y mathbbR_+ a in mathcalA^textmax e_y, p_y in mathcalP_y Maximum outgoing inter-temporal energy profile of asset a in the period p_y of the timeframe [p.u.]\np^textmax energy_ap_y mathbbR_+ a in mathcalA^textmax e_y Maximum outgoing inter-temporal energy value of asset a [MWh]\np^textmin energy_ap_y mathbbR_+ a in mathcalA^textmin e_y Minimum outgoing inter-temporal energy value of asset a [MWh]","category":"page"},{"location":"40-formulation/#Extra-Parameters-for-Producers-and-Conversion-Assets","page":"Mathematical Formulation","title":"Extra Parameters for Producers and Conversion Assets","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Domains of Indices Description Units\np^textmin operating point_ay mathbbR_+ a in mathcalA^textuc_y Minimum operating point or minimum stable generation level defined as a portion of the capacity of asset a at year y [p.u.]\np^textunits on cost_ay mathbbR_+ a in mathcalA^textuc_y Objective function coefficient on units_on variable. e.g., no-load cost or idling cost of asset a at year y [kEUR/h/units]\np^textmax ramp up_ay mathbbR_+ a in mathcalA^textramp_y Maximum ramping up rate as a portion of the capacity of asset a at year y [p.u./h]\np^textmax ramp down_ay mathbbR_+ a in mathcalA^textramp_y Maximum ramping down rate as a portion of the capacity of asset a at year y [p.u./h]","category":"page"},{"location":"40-formulation/#Parameters-for-Flows","page":"Mathematical Formulation","title":"Parameters for Flows","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Domains of Indices Description Units\np^textvariable cost_fy mathbbR_+ f in mathcalF, y in mathcalY Variable cost of flow f at year y [kEUR/MWh]\np^texteff_fy mathbbR_+ f in mathcalF, y in mathcalY Efficiency of flow f at year y [p.u.]\np^textinv cost_fy mathbbR_+ f in mathcalF^textt, y in mathcalY Overnight cost of transport flow f at year y [kEUR/MW]\np^textannualized inv cost_fy mathbbR_+ f in mathcalF^textt, y in mathcalY Annualized investment cost of transport flow f at year y [kEUR/MW/year]\np^textsalvage value_fy mathbbR_+ f in mathcalF^textt, y in mathcalY Salvage value of transport flow f at year y [kEUR/MW]\np^textdiscounting factor flow inv cost_fy mathbbR_+ f in mathcalF^textt, y in mathcalY Discounting factor for investment cost of transport flow f at year y [-]\np^textfixed cost_fy mathbbR_+ f in mathcalF^textt, y in mathcalY Fixed cost of transport flow f at year y [kEUR/MW/year]\np^textinv limit_fy mathbbR_+ f in mathcalF^textt, y in mathcalY Investment potential of flow f at year y [MW]\np^textcapacity_f mathbbR_+ f in mathcalF^textt Capacity per unit of investment of transport flow f (both exports and imports) [MW]\np^texttechnical lifetime_f mathbbZ_+ f in mathcalF^textt Technical lifetime of investment of transport flow f (both exports and imports) [year]\np^texteconomic lifetime_f mathbbZ_+ f in mathcalF^textt Economic lifetime of investment of transport flow f (both exports and imports) [year]\np^texttechnology-specific discount rate_f mathbbR_+ f in mathcalF^textt Technology-specific discount rate of investment of transport flow f (both exports and imports) [year]\np^textinit export units_fy mathbbR_+ f in mathcalF^textt, y in mathcalY Initial export units of transport flow f available at year y [MW]\np^textinit import units_fy mathbbR_+ f in mathcalF^textt, y in mathcalY Initial import units of transport flow f available at year y [MW]\np^textavailability profile_fvk_yb_k_y mathbbR_+ a in mathcalF, v in mathcalV, k_y in mathcalK_y, b_k_y in mathcalB_k_y Availability profile of flow f invested in year v in the representative period k_y and timestep block b_k_y [p.u.]","category":"page"},{"location":"40-formulation/#Parameters-for-Temporal-Structures","page":"Mathematical Formulation","title":"Parameters for Temporal Structures","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Domains of Indices Description Units\np^textduration_b_k_y mathbbR_+ b_k_y in mathcalB_k_y Duration of the timestep blocks b_k_y [h]\np^textrp weight_k_y mathbbR_+ k_y in mathcalK_y Weight of representative period k_y [-]\np^textmap_p_yk_y mathbbR_+ p_y in mathcalP_y, k_y in mathcalK_y Map with the weight of representative period k_y in period p_y [-]","category":"page"},{"location":"40-formulation/#Parameters-for-Groups","page":"Mathematical Formulation","title":"Parameters for Groups","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Domains of Indices Description Units\np^textmin invest limit_gy mathbbR_+ g in mathcalG^textai, y in mathcalY Minimum investment limit (potential) of group g at year y [MW]\np^textmax invest limit_gy mathbbR_+ g in mathcalG^textai, y in mathcalY Maximum investment limit (potential) of group g at year y [MW]","category":"page"},{"location":"40-formulation/#Parameters-for-the-Model","page":"Mathematical Formulation","title":"Parameters for the Model","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Description Units\np^textsocial discount rate mathbbR_+ Social discount rate [-]\np^textdiscount year mathbbZ_+ Discount year [year]","category":"page"},{"location":"40-formulation/#Extra-Parameters-for-Discounting","page":"Mathematical Formulation","title":"Extra Parameters for Discounting","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Domains of Indices Description Units\np^textdiscounting factor operation cost_y mathbbR_+ y in mathcalY Discounting factor for operation cost at year y [-]","category":"page"},{"location":"40-formulation/#math-variables","page":"Mathematical Formulation","title":"Variables","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Name Domain Domains of Indices Description Units\nv^textflow_fk_yb_k_y mathbbR f in mathcalF, k_y in mathcalK_y, b_k_y in mathcalB_k_y Flow f between two assets in representative period k_y and timestep block b_k_y [MW]\nv^textinv_ay mathbbZ_+ a in mathcalA^texti_y, y in mathcalY Number of invested units of asset a at year y [units]\nv^textdecom simple_ay mathbbZ_+ a in mathcalA^textdecom simple, y in mathcalY Number of decommissioned units of asset a that uses simple investment method at year y [units]\nv^textdecom compact_ayv mathbbZ_+ $ (a,y,v) \\in \\mathcal{D}^{\\text{decom units compact}}$ Number of decommissioned units of asset a that uses compact investment method at year y [units]\nv^textinv energy_ay mathbbZ_+ a in mathcalA^texti_y cap mathcalA^textse_y, y in mathcalY Number of invested units of the energy component of the storage asset a that uses energy method at year y [units]\nv^textdecom energy simple_ay mathbbZ_+ a in mathcalA^texti_y cap mathcalA^textse_y, y in mathcalY Number of decommissioned units of the energy component of the storage asset a that uses energy method at year y [units]\nv^textinv_fy mathbbZ_+ f in mathcalF^textti_y, y in mathcalY Number of invested units of capacity increment of transport flow f at year y [units]\nv^textdecom simple_fy mathbbZ_+ f in mathcalF^textti_y, y in mathcalY Number of decommissioned units of capacity increment of transport flow f at year y [units]\nv^textintra-storage_ak_yb_k_y mathbbR_+ a in mathcalA^texts_y setminus mathcalA^textss_y, k_y in mathcalK_y, b_k_y in mathcalB_k_y Intra storage level (within a representative period) for storage asset a, representative period k_y, and timestep block b_k_y [MWh]\nv^textinter-storage_ap_y mathbbR_+ a in mathcalA^textss_y, p_y in mathcalP_y Inter storage level (between representative periods) for storage asset a and period p_y [MWh]\nv^textis charging_ak_yb_k_y 0 1 a in mathcalA^textsb_y, k_y in mathcalK_y, b_k_y in mathcalB_k_y If an storage asset a is charging or not in representative period k_y and timestep block b_k_y [-]\nv^textunits on_ak_yb_k_y mathbbZ_+ a in mathcalA^textuc_y, k_y in mathcalK_y, b_k_y in mathcalB_k_y Number of units ON of asset a in representative period k_y and timestep block b_k_y [units]","category":"page"},{"location":"40-formulation/#math-objective-function","page":"Mathematical Formulation","title":"Objective Function","text":"","category":"section"},{"location":"40-formulation/#Expresssions-for-the-Objective-Function","page":"Mathematical Formulation","title":"Expresssions for the Objective Function","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"For available units across years, we define the following expresssions:","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\n    v^textavailable units simple method_ay  = p^textinitial units_ay + sum_i in mathcalY^texti y - p^texttechnical lifetime_a + 1  le i le y   v^textinv_ai - sum_i in mathcalY y - p^texttechnical lifetime_a + 1  le i le y  v^textdecom simple_ai \n     forall a in mathcalA^textdecom simple forall y in mathcalY \n    v^textavailable units compact method_ayv  = p^textinitial units_ayv + v^textinv_av - sum_i in mathcalY v  i le y  (aiv) in mathcalD^textdecom units compact v^textdecom compact_aiv\n \n     forall (ayv) in mathcalD^textavailable units compact \n    v^textavailable energy units simple method_ay  = p^textinitial storage units_ay + sum_i in mathcalY^texti y - p^texttechnical lifetime_a + 1  le i le y   v^textinv energy_ai - sum_i in mathcalY y - p^texttechnical lifetime_a + 1  le i le y  v^textdecom energy simple_ai \n     forall a in mathcalA^textse_y forall y in mathcalY \n    v^textavailable export units simple method_fy  = p^textinitial export units_fy + sum_i in mathcalY^texti y - p^texttechnical lifetime_f + 1  le i le y   v^textinv_fi - sum_i in mathcalY y - p^texttechnical lifetime_f + 1  le i le y  v^textdecom simple_fi \n     forall f in mathcalF^textti_y forall y in mathcalY \n    v^textavailable import units simple method_fy  = p^textinitial import units_fy + sum_i in mathcalY^texti y - p^texttechnical lifetime_f + 1  le i le y   v^textinv_fi - sum_i in mathcalY y - p^texttechnical lifetime_f + 1  le i le y  v^textdecom simple_fi \n     forall f in mathcalF^textti_y forall y in mathcalY \nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"In addition, we define the following expressions to determine the available units. This expression takes a few forms depending on whether the asset uses simple or compact investment method.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"If the asset uses simple investment method","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\n    v^textavailable units_ay  = v^textavailable units simple method_ay quad forall a in mathcalA forall y in mathcalY\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"If the asset uses compact investment method","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\n    v^textavailable units_ay  = sum_v in mathcalV  (ayv) in mathcalD^textdecom units compact v^textavailable units compact method_ayv quad forall a in mathcalA forall y in mathcalY\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Storage assets with energy method always use simple investment method","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\n    v^textavailable energy units_ay  = v^textavailable energy units simple method_ay quad forall a in mathcalA^textse_y forall y in mathcalY\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Transport assets always use simple investment method","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\n    v^textavailable export units_fy  = v^textavailable export units simple method_fy quad forall f in mathcalF^textti_y forall y in mathcalY \n    v^textavailable import units_fy  = v^textavailable import units simple method_fy quad forall f in mathcalF^textti_y forall y in mathcalY\nendaligned","category":"page"},{"location":"40-formulation/#Economic-Representation-for-the-Objective-Function","page":"Mathematical Formulation","title":"Economic Representation for the Objective Function","text":"","category":"section"},{"location":"40-formulation/#Discounting-Factor-for-Asset-Investment-Costs","page":"Mathematical Formulation","title":"Discounting Factor for Asset Investment Costs","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"p_a y^textdiscounting factor asset inv cost=frac1(1+p^textsocial discount rate)^y-p^textdiscount year(1-fracp_a y^textsalvage valuep_a y^textinv cost) quad forall a in mathcalA_y^texti forall y in mathcalY","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"where salvage value is","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"p^textsalvage value_a y = p^textannualized inv cost_a y sum_i=y^textlast+1^y + p^texteconomic lifetime_a y - 1 frac1(1 + p^texttechnology-specific discount rate_a y)^i - y  quad forall a in mathcalA_y^texti forall y in mathcalY","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"and where annualized cost is","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"p^textannualized inv cost_a y = fracp^texttechnology-specific discount rate_a y (1+p^texttechnology-specific discount rate_a y) cdot bigg( 1 - frac1 (1+p^texttechnology-specific discount rate_a y)^p^texteconomic lifetime_a y  bigg)  p^textinv cost_a y quad forall a in mathcalA_y^texti forall y in mathcalY","category":"page"},{"location":"40-formulation/#Discounting-Factor-for-Flow-Investment-Costs","page":"Mathematical Formulation","title":"Discounting Factor for Flow Investment Costs","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"p_f y^textdiscounting factor flow inv cost=frac1(1+p^textsocial discount rate)^y-p^textdiscount year(1-fracp_f y^textsalvage valuep_f y^textinv cost) quad forall f in mathcalF_y^textti forall y in mathcalY","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"where salvage value is","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"p^textsalvage value_f y = p^textannualized inv cost_f y sum_i=y^textlast+1^y + p^texteconomic lifetime_f y - 1 frac1(1 + p^texttechnology-specific discount rate_f y)^i - y  quad forall f in mathcalF_y^textti forall y in mathcalY","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"and where annualized cost is","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"p^textannualized inv cost_f y = fracp^texttechnology-specific discount rate_f y (1+p^texttechnology-specific discount rate_f y) cdot bigg( 1 - frac1 (1+p^texttechnology-specific discount rate_f y)^p^texteconomic lifetime_f y  bigg)  p^textinv cost_f y quad forall f in mathcalF_y^textti forall y in mathcalY","category":"page"},{"location":"40-formulation/#Discounting-Factor-for-Operation-Costs","page":"Mathematical Formulation","title":"Discounting Factor for Operation Costs","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"p_y^textdiscounting factor operation cost=frac1(1+p^textsocial discount rate)^y-p^textdiscount year p^textmilestone weight_yquad forall y in mathcalY","category":"page"},{"location":"40-formulation/#Objective-Function","page":"Mathematical Formulation","title":"Objective Function","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\ntextminimize quad  assets_investment_cost + assets_fixed_cost \n                         + flows_investment_cost + flows_fixed_cost \n                         + flows_variable_cost + unit_on_cost\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Where:","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nassets_investment_cost = sum_y in mathcalY sum_a in mathcalA^texti_y  p_a y^textdiscounting factor asset inv cost cdot p^textinv cost_ay cdot p^textcapacity_a cdot v^textinv_ay  +  sum_y in mathcalY sum_a in mathcalA^textse_y cap mathcalA^texti_y  p_a y^textdiscounting factor asset inv cost cdotp^textinv cost energy_ay cdot p^textenergy capacity_a cdot v^textinv energy_ay   \nassets_fixed_cost = sum_y in mathcalY sum_a in mathcalA^textdecom simple  p_y^textdiscounting factor operation cost cdot p^textfixed cost_ay cdot p^textcapacity_a cdot v^textavailable units simple method_ay \n + sum_(ayv) in mathcalD^textdecom units compact p_y^textdiscounting factor operation cost cdot p^textfixed cost_av cdot p^textcapacity_a cdot v^textavailable units compact method_ayv \n + sum_y in mathcalY sum_a in mathcalA^textse_y cap mathcalA^textdecom simple p_y^textdiscounting factor operation cost cdot p^textfixed cost energy_ay cdot p^textenergy capacity_a cdot v^textavailable energy capacity simple method_ay \nflows_investment_cost = sum_y in mathcalY sum_f in mathcalF^textti_y p_f y^textdiscounting factor flow inv cost cdot p^textinv cost_fy cdot p^textcapacity_f cdot v^textinv_fy \nflows_fixed_cost = frac12 sum_y in mathcalY sum_f in mathcalF^textti_y p_y^textdiscounting factor operation cost cdot p^textfixed cost_fy cdot p^textcapacity_f cdot left( v^textavailable export units_fy + v^textavailable import units_fy right) \nflows_variable_cost = sum_y in mathcalY sum_f in mathcalF_y sum_k_y in mathcalK_y sum_b_k_y in mathcalB_k_y p_y^textdiscounting factor operation cost cdot p^textrp weight_k_y cdot p^textvariable cost_fy cdot p^textduration_b_k_y cdot v^textflow_fk_yb_k_y \nunit_on_cost = sum_y in mathcalY sum_a in mathcalA^textuc_y sum_k_y in mathcalK_y sum_b_k_y in mathcalB_k_y p_y^textdiscounting factor operation cost cdot p^textrp weight_k_y cdot p^textunits on cost_ay cdot p^textduration_b_k_y cdot v^textunits on_ak_yb_k_y\nendaligned","category":"page"},{"location":"40-formulation/#math-constraints","page":"Mathematical Formulation","title":"Constraints","text":"","category":"section"},{"location":"40-formulation/#cap-constraints","page":"Mathematical Formulation","title":"Capacity Constraints","text":"","category":"section"},{"location":"40-formulation/#Maximum-Output-Flows-Limit","page":"Mathematical Formulation","title":"Maximum Output Flows Limit","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y leq p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot v^textavailable units simple method_ay  quad\n  forall y in mathcalY forall a in mathcalA^textdecom simple cap left(mathcalA^textcv cup left(mathcalA^texts setminus mathcalA^textsb_y right)  cup mathcalA^textp right) forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y  \nsum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y leq p^textcapacity_a cdot sum_v in mathcalV  (ayv) in mathcalD^textdecom units compact p^textavailability profile_avk_yb_k_y cdot v^textavailable units compact method_ayv  quad\n  forall y in mathcalY forall a in mathcalA^textdecom compact cap left(mathcalA^textcv cup left(mathcalA^texts setminus mathcalA^textsb_y right) cup mathcalA^textp right) forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Storage assets using the method to avoid charging and discharging simultaneously, i.e., a in mathcalA^textsb_y, use the following constraints instead of the previous one:","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Maximum output flows limit for storage assets such that a in mathcalA^textsb_y cap mathcalA^texti_y","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y leq p^textavailability profile_ayk_yb_k_y cdot left(p^textcapacity_a cdot p^textinit units_ay + p^textinv limit_ay right) cdot left(1 - v^textis charging_ak_yb_k_y right) quad\n  forall y in mathcalY forall a in mathcalA^textsb_y cap mathcalA^texti_y forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y leq p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot left(p^textinit units_ay cdot (1 - v^textis charging_ak_yb_k_y) - v^textavailable units_ay right)\n  forall y in mathcalY forall a in mathcalA^textsb_y cap mathcalA^texti_y forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"info: Info\nThe negative sign before the v^textavailable units_ay is because the available units include the p^textinit units_ay in its calculation.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Maximum output flows limit for storage assets such that a in mathcalA^textsb_y setminus mathcalA^texti_y","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y leq p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot p^textinit units_ay cdot left(1 - v^textis charging_ak_yb_k_y right) quad\n  forall y in mathcalY forall a in mathcalA^textsb_y setminus mathcalA^texti_y forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/#Maximum-Input-Flows-Limit","page":"Mathematical Formulation","title":"Maximum Input Flows Limit","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textin_ay v^textflow_fk_yb_k_y leq p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot v^textavailable units_ay   quad\n  forall y in mathcalY forall a in mathcalA^texts setminus mathcalA^textsb_y forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Storage assets using the method to avoid charging and discharging simultaneously, i.e., a in mathcalA^textsb, use the following constraints instead of the previous one:","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Maximum input flows limit for storage assets such that a in mathcalA^textsb_y cap mathcalA^texti_y","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textin_ay v^textflow_fk_yb_k_y leq p^textavailability profile_ayk_yb_k_y cdot left(p^textcapacity_a cdot p^textinit units_ay + p^textinv limit_ay right)  cdot v^textis charging_ak_yb_k_y quad forall y in mathcalY forall a in mathcalA^textsb_y cap mathcalA^texti_y forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textin_ay v^textflow_fk_yb_k_y leq p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot left(p^textinit units_ay cdot v^textis charging_ak_yb_k_y - v^textavailable units_ay right)  quad forall y in mathcalY forall a in mathcalA^textsb_y cap mathcalA^texti_y forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"info: Info\nThe negative sign before the v^textavailable units_ay is because the available units include the p^textinit units_ay in its calculation.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Maximum input flows limit for storage assets such that a in mathcalA^textsb_y setminus mathcalA^texti_y","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textin_ay v^textflow_fk_yb_k_y leq p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot p^textinit units_ay  cdot v^textis charging_ak_yb_k_y quad forall y in mathcalY forall a in mathcalA^textsb_y setminus mathcalA^texti_y forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/#Lower-Limit-for-Flows-that-are-Associated-with-Assets","page":"Mathematical Formulation","title":"Lower Limit for Flows that are Associated with Assets","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^textflow_fk_yb_k_y geq 0 quad forall y in mathcalY forall f in left( mathcalF^textout_ay  a in mathcalA^textp cup mathcalA^textcv cup mathcalA^texts right) cup left(mathcalF^textin_ay  a in mathcalA^textcv cup mathcalA^texts right) forall k_y in mathcalK_y forall b_k_y in mathcalB_k_y","category":"page"},{"location":"40-formulation/#uc-constraints","page":"Mathematical Formulation","title":"Unit Commitment Constraints","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Production and conversion assets within the set mathcalA^textuc will contain the unit commitment constraints in the model. These constraints are based on the work of Morales-España et al. (2013) and Morales-España et al. (2014).","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"The current version of the code only incorporates a basic unit commitment version of the constraints (i.e., utilizing only the unit commitment variable v^textunits on). However, upcoming versions will include more detailed constraints, incorporating startup and shutdown variables.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"For the unit commitment constraints, we define the following expression for the flow that is above the minimum operating point of the asset:","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"e^textflow above min_ak_yb_k_y = sum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y - p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot p^textmin operating point_ay cdot v^texton_ak_yb_k_y  quad\n  forall y in mathcalY forall a in mathcalA^textuc_y forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y","category":"page"},{"location":"40-formulation/#Limit-to-the-units-on-variable","page":"Mathematical Formulation","title":"Limit to the units on variable","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^texton_ak_yb_k_y leq v^textavailable units_ay  quad\n  forall y in mathcalY forall a in mathcalA^textuc_y forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y","category":"page"},{"location":"40-formulation/#Maximum-output-flow-above-the-minimum-operating-point","page":"Mathematical Formulation","title":"Maximum output flow above the minimum operating point","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"e^textflow above min_ayk_yb_k_y leq p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot left(1 - p^textmin operating point_ay right) cdot v^texton_ak_yb_k_y  quad\n  forall y in mathcalY forall a in mathcalA^textuc basic_y forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y","category":"page"},{"location":"40-formulation/#Minimum-output-flow-above-the-minimum-operating-point","page":"Mathematical Formulation","title":"Minimum output flow above the minimum operating point","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"e^textflow above min_ak_yb_k_y geq 0  quad\n  forall y in mathcalY forall a in mathcalA^textuc basic_y forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y","category":"page"},{"location":"40-formulation/#ramp-constraints","page":"Mathematical Formulation","title":"Ramping Constraints","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Ramping constraints restrict the rate at which the output flow of a production or conversion asset can change. If the asset is part of the unit commitment set (e.g., mathcalA^textuc_y), the ramping limits apply to the flow above the minimum output, but if it is not, the ramping limits apply to the total output flow.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Ramping constraints that take into account unit commitment variables are based on the work done by Damcı-Kurt et. al (2016). Also, please note that since the current version of the code only handles the basic unit commitment implementation, the ramping constraints are applied to the assets in the set mathcalA^textuc basic_y.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"info: Duration parameter\nThe following constraints are multiplied by p^textduration_b_k_y on the right-hand side to adjust for the duration of the timesteps since the ramp parameters are defined as rates. This assumption is based on the idea that all timesteps are the same in this section, which simplifies the formulation. However, in a flexible temporal resolution context, this may not hold true, and the duration needs to be the minimum duration of all the outgoing flows at the timestep block b_k_y. For more information, please visit the concept section on flexible time resolution.","category":"page"},{"location":"40-formulation/#Maximum-Ramp-Up-Rate-Limit-WITH-Unit-Commitment-Method","page":"Mathematical Formulation","title":"Maximum Ramp-Up Rate Limit WITH Unit Commitment Method","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"e^textflow above min_ak_yb_k_y - e^textflow above min_ak_yb_k_y-1 leq p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot p^textmax ramp up_ay cdot p^textduration_b_k_y cdot v^texton_ak_yb_k_y  quad\n  forall y in mathcalY forall a in left(mathcalA^textramp_y cap mathcalA^textuc basic_y right) forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y","category":"page"},{"location":"40-formulation/#Maximum-Ramp-Down-Rate-Limit-WITH-Unit-Commmitment-Method","page":"Mathematical Formulation","title":"Maximum Ramp-Down Rate Limit WITH Unit Commmitment Method","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"e^textflow above min_ak_yb_k_y - e^textflow above min_ak_yb_k_y-1 geq - p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot p^textmax ramp down_ay cdot p^textduration_b_k_y cdot v^texton_ak_yb_k_y-1  quad\n  forall y in mathcalY forall a in left(mathcalA^textramp_y cap mathcalA^textuc basic_y right) forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y","category":"page"},{"location":"40-formulation/#Maximum-Ramp-Up-Rate-Limit-WITHOUT-Unit-Commitment-Method","page":"Mathematical Formulation","title":"Maximum Ramp-Up Rate Limit WITHOUT Unit Commitment Method","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"sum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y - sum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y-1 leq p^textmax ramp up_ay cdot p^textduration_b_k_y cdot p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot v^textavailable units simple method_ay  quad\n  forall y in mathcalY forall a in  mathcalA^textdecom simple capleft(mathcalA^textramp_y setminus mathcalA^textuc basic_y right) forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y \nsum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y - sum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y-1 leq p^textmax ramp up_ay cdot p^textduration_b_k_y cdot p^textcapacity_a cdot  sum_v in mathcalV  (ayv) in mathcalD^textdecom units compact p^textavailability profile_avk_yb_k_y cdot v^textavailable units compact method_ayv  quad\n  forall y in mathcalY forall a in  mathcalA^textdecom compact capleft(mathcalA^textramp_y setminus mathcalA^textuc basic_y right) forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y","category":"page"},{"location":"40-formulation/#Maximum-Ramp-Down-Rate-Limit-WITHOUT-Unit-Commitment-Method","page":"Mathematical Formulation","title":"Maximum Ramp-Down Rate Limit WITHOUT Unit Commitment Method","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"sum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y - sum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y-1 geq - p^textmax ramp down_ay cdot p^textduration_b_k_y cdot p^textavailability profile_ayk_yb_k_y cdot p^textcapacity_a cdot v^textavailable units simple method_ay  quad\n  forall y in mathcalY forall a in  mathcalA^textdecom simple capleft(mathcalA^textramp_y setminus mathcalA^textuc basic_y right) forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y \nsum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y - sum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y-1 geq - p^textmax ramp down_ay cdot p^textduration_b_k_y cdot p^textcapacity_a cdot  sum_v in mathcalV  (ayv) in mathcalD^textdecom units compact p^textavailability profile_avk_yb_k_y cdot v^textavailable units compact method_ayv  quad\n  forall y in mathcalY forall a in  mathcalA^textdecom compact capleft(mathcalA^textramp_y setminus mathcalA^textuc basic_y right) forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y","category":"page"},{"location":"40-formulation/#Constraints-for-Energy-Consumer-Assets","page":"Mathematical Formulation","title":"Constraints for Energy Consumer Assets","text":"","category":"section"},{"location":"40-formulation/#Balance-Constraint-for-Consumers","page":"Mathematical Formulation","title":"Balance Constraint for Consumers","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"The balance constraint sense depends on the method selected in the asset file's parameter consumer_balance_sense. The default value is =, but the user can choose geq as an option.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textin_ay v^textflow_fk_yb_k_y - sum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y leftbeginarrayl =  geq endarrayright p^textdemand profile_ak_yb_k_y cdot p^textpeak demand_ay quad forall y in mathcalY forall a in mathcalA^textc forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/#Constraints-for-Energy-Storage-Assets","page":"Mathematical Formulation","title":"Constraints for Energy Storage Assets","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"There are two types of constraints for energy storage assets: intra-temporal and inter-temporal. Intra-temporal constraints impose limits inside a representative period, while inter-temporal constraints combine information from several representative periods (e.g., to model seasonal storage). For more information on this topic, refer to the concepts section or Tejada-Arango et al. (2018) and Tejada-Arango et al. (2019).","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"In addition, we define the following expression to determine the energy investment limit of the storage assets. This expression takes two different forms depending on whether the storage asset belongs to the set mathcalA^textse or not.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Investment energy method:","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"e^textavailable energy inv limit_ay = p^textenergy capacity_a cdot v^textavailable energy units_ay quad forall y in mathcalY forall a in mathcalA^texti cap mathcalA^textse_y","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Fixed energy-to-power ratio method:","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"e^textavailable energy inv limit_ay = p^textcapacity storage energy_a cdot p^textinitial storage units_ay quad forall y in mathcalY forall a in (mathcalA^texts setminus mathcalA^textse_y)","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\ne^textavailable energy inv limit_ay\n = p^textcapacity storage energy_a cdot p^textinitial storage units_ay \n + p^textenergy to power ratio_ay cdot p^textcapacity_a cdot v^textavailable units_ay quad forall y in mathcalY forall a in mathcalA^texti cap (mathcalA^texts setminus mathcalA^textse_y)\nendaligned","category":"page"},{"location":"40-formulation/#intra-storage-balance","page":"Mathematical Formulation","title":"Intra-temporal Constraint for Storage Balance","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^textintra-storage_ak_yb_k_y = v^textintra-storage_ak_yb_k_y-1  + p^textinflows_ak_yb_k_y + sum_f in mathcalF^textin_ay p^texteff_fy cdot p^textduration_b_k_y cdot v^textflow_fk_yb_k_y - sum_f in mathcalF^textout_ay frac1p^texteff_fy cdot p^textduration_b_k_y cdot v^textflow_fk_yb_k_y quad\n  forall y in mathcalY forall a in mathcalA^texts setminus mathcalA^textss forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/#Intra-temporal-Constraint-for-Maximum-Storage-Level-Limit","page":"Mathematical Formulation","title":"Intra-temporal Constraint for Maximum Storage Level Limit","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^textintra-storage_ak_yb_k_y leq p^textmax intra level_ak_yb_k_y cdot e^textavailable energy inv limit_ay quad forall y in mathcalY forall a in mathcalA^texts setminus mathcalA^textss forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y","category":"page"},{"location":"40-formulation/#Intra-temporal-Constraint-for-Minimum-Storage-Level-Limit","page":"Mathematical Formulation","title":"Intra-temporal Constraint for Minimum Storage Level Limit","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^textintra-storage_ak_yb_k_y geq p^textmin intra level_ak_yb_k_y cdot e^textavailable energy inv limit_ay quad forall y in mathcalY forall a in mathcalA^texts setminus mathcalA^textss forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y","category":"page"},{"location":"40-formulation/#Intra-temporal-Cycling-Constraint","page":"Mathematical Formulation","title":"Intra-temporal Cycling Constraint","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"The cycling constraint for the intra-temporal constraints links the first timestep block (b^textfirst_k_y) and the last one (b^textlast_k_y) in each representative period. The parameter p^textinit storage level_ay determines the considered equations in the model for this constraint:","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"If parameter p^textinit storage level_ay is not defined, the intra-storage level of the last timestep block (b^textlast_k_y) is used as the initial value for the first timestep block in the intra-temporal constraint for the storage balance.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^textintra-storage_ak_yb^textfirst_k_y = v^textintra-storage_ak_yb^textlast_k_y  + p^textinflows_ak_yb^textfirst_k_y + sum_f in mathcalF^textin_ay p^texteff_fy cdot p^textduration_b_k_y cdot v^textflow_fk_yb^textfirst_k_y - sum_f in mathcalF^textout_ay frac1p^texteff_fy cdot p^textduration_b_k_y cdot v^textflow_fk_yb^textfirst_k_y quad\n  forall y in mathcalY forall a in mathcalA^texts setminus mathcalA^textss forall k_y in mathcalK_y\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"If parameter p^textinit storage level_ay is defined, we use it as the initial value for the first timestep block in the intra-temporal constraint for the storage balance. In addition, the intra-storage level of the last timestep block (b^textlast_k_y) in each representative period must be greater than this initial value.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^textintra-storage_ak_yb^textfirst_k_y = p^textinit storage level_ay  + p^textinflows_ak_yb^textfirst_k_y + sum_f in mathcalF^textin_ay p^texteff_fy cdot p^textduration_b_k_y cdot v^textflow_fk_yb^textfirst_k_y - sum_f in mathcalF^textout_ay frac1p^texteff_fy cdot p^textduration_b_k_y cdot v^textflow_fk_yb^textfirst_k_y quad\n  forall y in mathcalY forall a in mathcalA^texts setminus mathcalA^textss forall k_y in mathcalK_y\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^textintra-storage_ak_yb^textfirst_k_y geq p^textinit storage level_ay quad\n  forall y in mathcalY forall a in mathcalA^texts setminus mathcalA^textss forall k_y in mathcalK_y","category":"page"},{"location":"40-formulation/#inter-storage-balance","page":"Mathematical Formulation","title":"Inter-temporal Constraint for Storage Balance","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"This constraint allows us to consider the storage seasonality throughout the model's timeframe (e.g., a year). The parameter p^textmap_p_yk_y determines how much of the representative period k_y is in the period p_y, and you can use a clustering technique to calculate it. For TulipaEnergyModel.jl, we recommend using TulipaClustering.jl to compute the clusters for the representative periods and their map.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"For the sake of simplicity, we show the constraint assuming the inter-storage level between two consecutive periods p_y; however, TulipaEnergyModel.jl can handle more flexible period block definition through the timeframe definition in the model using the information in the timeframe partitions file, see schemas.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^textinter-storage_ap_y =  v^textinter-storage_ap_y-1 + sum_k_y in mathcalK_y p^textmap_p_yk_y sum_b_k_y in mathcalB_k_y p^textinflows_ak_yb_k_y \n + sum_f in mathcalF^textin_ay p^texteff_fy sum_k_y in mathcalK_y p^textmap_p_yk_y sum_b_k_y in mathcalB_k_y p^textduration_b_k_y cdot v^textflow_fk_yb_k_y \n - sum_f in mathcalF^textout_ay frac1p^texteff_fy sum_k_y in mathcalK_y p^textmap_p_yk_y sum_b_k_y in mathcalB_k_y p^textduration_b_k_y cdot v^textflow_fk_yb_k_y\n   forall y in mathcalY forall a in mathcalA^textss forall p_y in mathcalP_y\nendaligned","category":"page"},{"location":"40-formulation/#Inter-temporal-Constraint-for-Maximum-Storage-Level-Limit","page":"Mathematical Formulation","title":"Inter-temporal Constraint for Maximum Storage Level Limit","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^textinter-storage_ap_y leq p^textmax inter level_ap_y cdot e^textavailable energy inv limit_ay quad forall y in mathcalY forall a in mathcalA^textss forall p_y in mathcalP_y","category":"page"},{"location":"40-formulation/#Inter-temporal-Constraint-for-Minimum-Storage-Level-Limit","page":"Mathematical Formulation","title":"Inter-temporal Constraint for Minimum Storage Level Limit","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^textinter-storage_ap_y geq p^textmin inter level_ap_y cdot e^textavailable energy inv limit_ay quad forall y in mathcalY forall a in mathcalA^textss forall p_y in mathcalP_y","category":"page"},{"location":"40-formulation/#Inter-temporal-Cycling-Constraint","page":"Mathematical Formulation","title":"Inter-temporal Cycling Constraint","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"The cycling constraint for the inter-temporal constraints links the first-period block (p^textfirst_y) and the last one (p^textlast_y) in the timeframe. The parameter p^textinit storage level_ay determines the considered equations in the model for this constraint:","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"If parameter p^textinit storage level_ay is not defined, the inter-storage level of the last period block (p^textlast_y) is used as the initial value for the first-period block in the inter-temporal constraint for the storage balance.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^textinter-storage_ap^textfirst_y =  v^textinter-storage_ap^textlast_y + sum_k_y in mathcalK_y p^textmap_p^textfirst_yk_y sum_b_k_y in mathcalB_k_y p^textinflows_ak_yb_k_y \n + sum_f in mathcalF^textin_ay p^texteff_fy sum_k_y in mathcalK_y p^textmap_p^textfirst_yk_y sum_b_k_y in mathcalB_k_y p^textduration_b_k_y cdot v^textflow_fk_yb_k_y \n - sum_f in mathcalF^textout_ay frac1p^texteff_fy sum_k_y in mathcalK_y p^textmap_p^textfirst_yk_y sum_b_k_y in mathcalB_k_y p^textduration_b_k_y cdot v^textflow_fk_yb_k_y\n   forall y in mathcalY forall a in mathcalA^textss\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"If parameter p^textinit storage level_ay is defined, we use it as the initial value for the first-period block in the inter-temporal constraint for the storage balance. In addition, the inter-storage level of the last period block (p^textlast_y) in the timeframe must be greater than this initial value.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^textinter-storage_ap^textfirst_y =  p^textinit storage level_ay + sum_k_y in mathcalK_y p^textmap_p^textfirst_yk_y sum_b_k_y in mathcalB_k_y p^textinflows_ak_yb_k_y \n + sum_f in mathcalF^textin_ay p^texteff_fy sum_k_y in mathcalK_y p^textmap_p^textfirst_yk_y sum_b_k_y in mathcalB_k_y p^textduration_b_k_y cdot v^textflow_fk_yb_k_y \n - sum_f in mathcalF^textout_ay frac1p^texteff_fy sum_k_y in mathcalK_y p^textmap_p^textfirst_yk_y sum_b_k_y in mathcalB_k_y p^textduration_b_k_y cdot v^textflow_fk_yb_k_y\n   forall y in mathcalY forall a in mathcalA^textss\nendaligned","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^textinter-storage_ap^textlast_y geq p^textinit storage level_ay quad\n  forall y in mathcalY forall a in mathcalA^textss","category":"page"},{"location":"40-formulation/#Constraints-for-Energy-Hub-Assets","page":"Mathematical Formulation","title":"Constraints for Energy Hub Assets","text":"","category":"section"},{"location":"40-formulation/#Balance-Constraint-for-Hubs","page":"Mathematical Formulation","title":"Balance Constraint for Hubs","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textin_ay v^textflow_fk_yb_k_y = sum_f in mathcalF^textout_ay v^textflow_fk_yb_k_y\nquad forall y in mathcalY forall a in mathcalA^texth forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/#Constraints-for-Energy-Conversion-Assets","page":"Mathematical Formulation","title":"Constraints for Energy Conversion Assets","text":"","category":"section"},{"location":"40-formulation/#Balance-Constraint-for-Conversion-Assets","page":"Mathematical Formulation","title":"Balance Constraint for Conversion Assets","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textin_ay p^texteff_fy cdot v^textflow_fk_yb_k_y = sum_f in mathcalF^textout_ay fracv^textflow_fk_yb_k_yp^texteff_fy\nquad forall y in mathcalY forall a in mathcalA^textcv forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/#Constraints-for-Transport-Assets","page":"Mathematical Formulation","title":"Constraints for Transport Assets","text":"","category":"section"},{"location":"40-formulation/#Maximum-Transport-Flow-Limit","page":"Mathematical Formulation","title":"Maximum Transport Flow Limit","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^textflow_fk_yb_k_y leq p^textavailability profile_fyk_yb_k_y cdot p^textcapacity_f cdot v^textavailable export units_fy  quad forall y in mathcalY forall f in mathcalF^textt forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/#Minimum-Transport-Flow-Limit","page":"Mathematical Formulation","title":"Minimum Transport Flow Limit","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nv^textflow_fk_yb_k_y geq - p^textavailability profile_fyk_yb_k_y cdot p^textcapacity_f cdot v^textavailable import units_fy  quad forall y in mathcalY forall f in mathcalF^textt forall k_y in mathcalK_yforall b_k_y in mathcalB_k_y\nendaligned","category":"page"},{"location":"40-formulation/#Constraints-for-Investments","page":"Mathematical Formulation","title":"Constraints for Investments","text":"","category":"section"},{"location":"40-formulation/#Maximum-Investment-Limit-for-Assets","page":"Mathematical Formulation","title":"Maximum Investment Limit for Assets","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^textinv_ay leq fracp^textinv limit_ayp^textcapacity_a quad forall y in mathcalY forall a in mathcalA^texti_y","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"If the parameter investment_integer is set to true, then the right-hand side of this constraint uses a least integer function (floor function) to guarantee that the limit is integer.","category":"page"},{"location":"40-formulation/#Maximum-Energy-Investment-Limit-for-Assets","page":"Mathematical Formulation","title":"Maximum Energy Investment Limit for Assets","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^textinv energy_ay leq fracp^textinv limit energy_ayp^textenergy capacity_a quad forall y in mathcalY  forall a in mathcalA^texti_y cap mathcalA^textse_y","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"If the parameter investment_integer_storage_energy is set to true, then the right-hand side of this constraint uses a least integer function (floor function) to guarantee that the limit is integer.","category":"page"},{"location":"40-formulation/#Maximum-Investment-Limit-for-Flows","page":"Mathematical Formulation","title":"Maximum Investment Limit for Flows","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"v^textinv_fy leq fracp^textinv limit_fyp^textcapacity_f quad forall y in mathcalY forall f in mathcalF^textti_y","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"If the parameter investment_integer is set to true, then the right-hand side of this constraint uses a least integer function (floor function) to guarantee that the limit is integer.","category":"page"},{"location":"40-formulation/#inter-temporal-energy-constraints","page":"Mathematical Formulation","title":"Inter-temporal Energy Constraints","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"These constraints allow us to consider a maximum or minimum energy limit for an asset throughout the model's timeframe (e.g., a year). It uses the same principle explained in the inter-temporal constraint for storage balance and in the Storage Modeling section.","category":"page"},{"location":"40-formulation/#Maximum-Outgoing-Energy-During-the-Timeframe","page":"Mathematical Formulation","title":"Maximum Outgoing Energy During the Timeframe","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textout_ay sum_k_y in mathcalK_y p^textmap_p_yk_y sum_b_k_y in mathcalB_k_y p^textduration_b_k cdot v^textflow_fk_yb_k_y leq  p^textmax inter profile_ap_y cdot p^textmax energy_ay\n   forall y in mathcalY forall a in mathcalA^textmax e forall p_y in mathcalP_y\nendaligned","category":"page"},{"location":"40-formulation/#Minimum-Outgoing-Energy-During-the-Timeframe","page":"Mathematical Formulation","title":"Minimum Outgoing Energy During the Timeframe","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_f in mathcalF^textout_ay sum_k_y in mathcalK_y p^textmap_p_yk_y sum_b_k_y in mathcalB_k_y p^textduration_b_k cdot v^textflow_fk_yb_k_y geq  p^textmin inter profile_ap_y cdot p^textmin energy_ay\n   forall y in mathcalY forall a in mathcalA^textmin e forall p_y in mathcalP_y\nendaligned","category":"page"},{"location":"40-formulation/#group-constraints","page":"Mathematical Formulation","title":"Constraints for Groups","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"The following constraints aggregate variables of different assets depending on the method that applies to the group.","category":"page"},{"location":"40-formulation/#investment-group-constraints","page":"Mathematical Formulation","title":"Investment Limits of a Group","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"These constraints apply to assets in a group using the investment method mathcalG^textai_y. They help impose an investment potential of a spatial area commonly shared by several assets that can be invested there.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"info: Info\nThese constraints are applied to the investments each year. The model does not yet have investment limits to a group's available invested capacity.","category":"page"},{"location":"40-formulation/#Minimum-Investment-Limit-of-a-Group","page":"Mathematical Formulation","title":"Minimum Investment Limit of a Group","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_a in mathcalA^texti_y  p^textgroup_a = g p^textcapacity_a cdot v^textinv_ay geq  p^textmin invest limit_gy\n   forall y in mathcalY forall g in mathcalG^textai_y\nendaligned","category":"page"},{"location":"40-formulation/#Maximum-Investment-Limit-of-a-Group","page":"Mathematical Formulation","title":"Maximum Investment Limit of a Group","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"beginaligned\nsum_a in mathcalA^texti_y  p^textgroup_a = g p^textcapacity_a cdot v^textinv_ay leq  p^textmax invest limit_gy\n   forall y in mathcalY forall g in mathcalG^textai_y\nendaligned","category":"page"},{"location":"40-formulation/#math-references","page":"Mathematical Formulation","title":"References","text":"","category":"section"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Damcı-Kurt, P., Küçükyavuz, S., Rajan, D., Atamtürk, A., 2016. A polyhedral study of production ramping. Math. Program. 158, 175–205. doi: 10.1007/s10107-015-0919-9.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Morales-España, G., Ramos, A., García-González, J., 2014. An MIP Formulation for Joint Market-Clearing of Energy and Reserves Based on Ramp Scheduling. IEEE Transactions on Power Systems 29, 476-488. doi: 10.1109/TPWRS.2013.2259601.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Morales-España, G., Latorre, J. M., Ramos, A., 2013. Tight and Compact MILP Formulation for the Thermal Unit Commitment Problem. IEEE Transactions on Power Systems 28, 4897-4908. doi: 10.1109/TPWRS.2013.2251373.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Tejada-Arango, D.A., Domeshek, M., Wogrin, S., Centeno, E., 2018. Enhanced representative days and system states modeling for energy storage investment analysis. IEEE Transactions on Power Systems 33, 6534–6544. doi:10.1109/TPWRS.2018.2819578.","category":"page"},{"location":"40-formulation/","page":"Mathematical Formulation","title":"Mathematical Formulation","text":"Tejada-Arango, D.A., Wogrin, S., Siddiqui, A.S., Centeno, E., 2019. Opportunity cost including short-term energy storage in hydrothermal dispatch models using a linked representative periods approach. Energy 188, 116079. doi:10.1016/j.energy.2019.116079.","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"CurrentModule = TulipaEnergyModel","category":"page"},{"location":"#home","page":"Welcome","title":"Welcome","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"TulipaEnergyModel.jl is an optimization model for the electricity market that can be coupled with other energy sectors (e.g., hydrogen, heat, natural gas, etc.). The optimization model determines the optimal investment and operation decisions for different types of assets (e.g., producers, consumers, conversion, storage, and transport). TulipaEnergyModel.jl is developed in Julia and depends on the JuMP.jl package.","category":"page"},{"location":"#Tulipa-in-a-Nutshell","page":"Welcome","title":"Tulipa in a Nutshell","text":"","category":"section"},{"location":"#Example-Questions","page":"Welcome","title":"Example Questions","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"Tulipa can answer questions such as:","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"How much flexible energy supply and demand is available? How much is needed in the future?\nHow will different investment decisions impact the balance and generation mix of the energy system?\nWhere will there be grid congestion in the future? How would placing [technology] at [location] impact congestion?\nHow will [national/international] policy targets influence investment and dispatch?\nHow will a future energy system handle different weather patterns and extreme events (such as dunkelflaute)?","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"Not sure if Tulipa is right for your research? Feel free to ask in our Discussions!","category":"page"},{"location":"#Scope-and-Features","page":"Welcome","title":"Scope & Features","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"For modellers, here is a brief summary of Tulipa's scope and features. More details can be found in the Concepts or Formulation.","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"Optimisation Objective: Minimize total system cost for investment & dispatch\nGeographic scope: Flexible/Anywhere - Region/Country/Continent\nEnergy carriers: Any/All - electricity, gas, H2, heat, etc\nTimespan: Any - Usually Yearly or Multi-year\nTime resolution: Fully-flexible - even mixing different resolutions (1-hr, 2-hr, 3-hr, etc) within a scenario\nTemporal aggregation: Time series aggregation using blended representative periods\nStorage representation: Short- and Long-term storage constraints, even while using representative periods\nSolutions: Optimal & Near-optimal alternatives, using modelling to generate alternatives (MGA)","category":"page"},{"location":"#Getting-Started","page":"Welcome","title":"Getting Started","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"To start using TulipaEnergyModel for your research, check out our How to Use section and Tutorials.","category":"page"},{"location":"","page":"Welcome","title":"Welcome","text":"For a more technical explanation, check out the Concepts section, or dive into the Mathematical Formulation.","category":"page"},{"location":"#bugs-and-discussions","page":"Welcome","title":"Bug reports and discussions","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"If you think you have found a bug, feel free to open an Issue. If you have a general question or idea, start a Discussion.","category":"page"},{"location":"#Contributing","page":"Welcome","title":"Contributing","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"If you want to contribute (awesome!), please read our Contributing Guidelines and follow the setup in our Developer Documentation.","category":"page"},{"location":"#license","page":"Welcome","title":"License","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"This content is released under the Apache License 2.0 License.","category":"page"},{"location":"#Contributors","page":"Welcome","title":"Contributors","text":"","category":"section"},{"location":"","page":"Welcome","title":"Welcome","text":"<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://abelsiqueira.com\"><img src=\"https://avatars.githubusercontent.com/u/1068752?v=4?s=100\" width=\"100px;\" alt=\"Abel Soares Siqueira\"/><br /><sub><b>Abel Soares Siqueira</b></sub></a><br /><a href=\"https://github.com/TulipaEnergy/TulipaEnergyModel.jl/commits?author=abelsiqueira\" title=\"Code\">💻</a> <a href=\"https://github.com/TulipaEnergy/TulipaEnergyModel.jl/pulls?q=is%3Apr+reviewed-by%3Aabelsiqueira\" title=\"Reviewed Pull Requests\">👀</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/datejada\"><img src=\"https://avatars.githubusercontent.com/u/12887482?v=4?s=100\" width=\"100px;\" alt=\"Diego Alejandro Tejada Arango\"/><br /><sub><b>Diego Alejandro Tejada Arango</b></sub></a><br /><a href=\"https://github.com/TulipaEnergy/TulipaEnergyModel.jl/commits?author=datejada\" title=\"Code\">💻</a> <a href=\"https://github.com/TulipaEnergy/TulipaEnergyModel.jl/pulls?q=is%3Apr+reviewed-by%3Adatejada\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"#ideas-datejada\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#research-datejada\" title=\"Research\">🔬</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/g-moralesespana\"><img src=\"https://avatars.githubusercontent.com/u/42405171?v=4?s=100\" width=\"100px;\" alt=\"Germán Morales\"/><br /><sub><b>Germán Morales</b></sub></a><br /><a href=\"#research-g-moralesespana\" title=\"Research\">🔬</a> <a href=\"#ideas-g-moralesespana\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#fundingFinding-g-moralesespana\" title=\"Funding Finding\">🔍</a> <a href=\"#projectManagement-g-moralesespana\" title=\"Project Management\">📆</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/greg-neustroev\"><img src=\"https://avatars.githubusercontent.com/u/32451432?v=4?s=100\" width=\"100px;\" alt=\"Greg Neustroev\"/><br /><sub><b>Greg Neustroev</b></sub></a><br /><a href=\"#ideas-greg-neustroev\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#research-greg-neustroev\" title=\"Research\">🔬</a> <a href=\"https://github.com/TulipaEnergy/TulipaEnergyModel.jl/commits?author=greg-neustroev\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jkiviluo\"><img src=\"https://avatars.githubusercontent.com/u/40472544?v=4?s=100\" width=\"100px;\" alt=\"Juha Kiviluoma\"/><br /><sub><b>Juha Kiviluoma</b></sub></a><br /><a href=\"#ideas-jkiviluo\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#research-jkiviluo\" title=\"Research\">🔬</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/clizbe\"><img src=\"https://avatars.githubusercontent.com/u/11889283?v=4?s=100\" width=\"100px;\" alt=\"Lauren Clisby\"/><br /><sub><b>Lauren Clisby</b></sub></a><br /><a href=\"https://github.com/TulipaEnergy/TulipaEnergyModel.jl/commits?author=clizbe\" title=\"Code\">💻</a> <a href=\"https://github.com/TulipaEnergy/TulipaEnergyModel.jl/pulls?q=is%3Apr+reviewed-by%3Aclizbe\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"#ideas-clizbe\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#projectManagement-clizbe\" title=\"Project Management\">📆</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/lsoucasse\"><img src=\"https://avatars.githubusercontent.com/u/135331272?v=4?s=100\" width=\"100px;\" alt=\"Laurent Soucasse\"/><br /><sub><b>Laurent Soucasse</b></sub></a><br /><a href=\"#ideas-lsoucasse\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mdeweerdt\"><img src=\"https://avatars.githubusercontent.com/u/1650785?v=4?s=100\" width=\"100px;\" alt=\"Mathijs de Weerdt\"/><br /><sub><b>Mathijs de Weerdt</b></sub></a><br /><a href=\"#fundingFinding-mdeweerdt\" title=\"Funding Finding\">🔍</a> <a href=\"#projectManagement-mdeweerdt\" title=\"Project Management\">📆</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/gnawin\"><img src=\"https://avatars.githubusercontent.com/u/125902905?v=4?s=100\" width=\"100px;\" alt=\"Ni Wang\"/><br /><sub><b>Ni Wang</b></sub></a><br /><a href=\"https://github.com/TulipaEnergy/TulipaEnergyModel.jl/commits?author=gnawin\" title=\"Code\">💻</a> <a href=\"https://github.com/TulipaEnergy/TulipaEnergyModel.jl/pulls?q=is%3Apr+reviewed-by%3Agnawin\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"#ideas-gnawin\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#research-gnawin\" title=\"Research\">🔬</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://www.svrijn.nl\"><img src=\"https://avatars.githubusercontent.com/u/8833517?v=4?s=100\" width=\"100px;\" alt=\"Sander van Rijn\"/><br /><sub><b>Sander van Rijn</b></sub></a><br /><a href=\"#ideas-sjvrijn\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/suvayu\"><img src=\"https://avatars.githubusercontent.com/u/229540?v=4?s=100\" width=\"100px;\" alt=\"Suvayu Ali\"/><br /><sub><b>Suvayu Ali</b></sub></a><br /><a href=\"https://github.com/TulipaEnergy/TulipaEnergyModel.jl/commits?author=suvayu\" title=\"Code\">💻</a> <a href=\"https://github.com/TulipaEnergy/TulipaEnergyModel.jl/pulls?q=is%3Apr+reviewed-by%3Asuvayu\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"#ideas-suvayu\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/gzclarence\"><img src=\"https://avatars.githubusercontent.com/u/70965161?v=4?s=100\" width=\"100px;\" alt=\"Zhi\"/><br /><sub><b>Zhi</b></sub></a><br /><a href=\"#ideas-gzclarence\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#research-gzclarence\" title=\"Research\">🔬</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/maaikeelgersma\"><img src=\"https://avatars.githubusercontent.com/u/55436655?v=4?s=100\" width=\"100px;\" alt=\"maaikeelgersma\"/><br /><sub><b>maaikeelgersma</b></sub></a><br /><a href=\"#ideas-maaikeelgersma\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"#research-maaikeelgersma\" title=\"Research\">🔬</a></td>\n    </tr>\n  </tbody>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->","category":"page"}]
}
